{"version":3,"file":"index.js","sources":["../src/queue/base.js","../src/queue/wx.js","../src/util/mp-extend.js","../src/log/wx.js","../src/index.js"],"sourcesContent":["\n/**\n * 消息队列 Base\n */\nexport default class Base {\n    constructor(baseUrl) {\n        this.baseUrl = baseUrl\n        this.requestQueue = [] // 队列\n        this.requestTimmer = undefined\n        this.synRequestNum = 4\n        this.synNum = 0\n        this.retryNum = 1 // 重试上报机制\n    }\n\n    /**\n     * 同步队列 （传入对象必须要有logType，logError）\n     * @param {*} log 队列日志\n     */\n    pushToQueue(log) {\n        {\n            // 简单先同步放入数组中\n            this.requestQueue.push(log)\n            return this.onReady(() => {\n                this.requestTimmer = this.delay(() => {\n                    this.clear()\n                }, this.requestQueue[0] && (!!this.requestQueue[0].logError && this.requestQueue[0].logError > 0) ? 3e3 : -1)\n            })\n        }\n    }\n\n    /**\n     * 宏任务（检测是否有唯一对应值）\n     * @param {*} fun\n     */\n    onReady(fun) {\n        if (typeof fun != 'function') {\n            return\n        }\n        // 检测是否有 openId 如果没有则延迟上报\n        if (fun) {\n            fun()\n        }\n    }\n\n    /**\n     * 执行队列\n     * @param {*} fun\n     * @param {*} e\n     */\n    delay(fun, e) {\n        if (!fun && typeof fun != 'function') return null\n        return e === -1 ? (fun(), null) : setTimeout(fun, e || 0)\n    }\n\n    /**\n     * 并发限制\n     * @return {?}\n     */\n    clear() {\n        var e\n        if (this.synNum > this.synRequestNum) {\n            return clearTimeout(this.requestTimmer), this.requestTimmer = setTimeout(() => {\n                this.clear()\n            }, 50)\n        }\n        for (clearTimeout(this.requestTimmer), this.requestTimmer = null; this.synNum < this.synRequestNum && (e = this.requestQueue.pop()); this.synNum++) {\n            this.handleLog(e)\n        }\n        // 执行完如果还有数据则继续执行（放到宏任务）\n        !!this.requestQueue.length && (this.requestTimmer = setTimeout(() => {\n            this.clear()\n        }, 50))\n\n    }\n\n    /**\n     * 清空队列\n     * @return {?}\n     */\n    clearAll() {\n        this.requestQueue = []\n        this.requestTimmer = null\n        this.synNum = 0\n    }\n\n    /**\n     * 并发数减一\n     * @return {?}\n     */\n    reduceSynNumFun() {\n        Queue.instance.synNum--\n        return this\n    }\n\n    /**\n     * 上报\n     * @param {*} e logType判断上传接口是哪种类型 pv：上报pv 逻辑 mv：上报mv逻辑 logError：0 代码重新上报次数0次，用int后续方便扩展\n     */\n    handleLog(e) {\n        // 深拷贝避免影响其他数据\n        let log = JSON.parse(JSON.stringify(e))\n        try {\n            let param = {\n                viewData: log\n            }\n            this._fetch(param).then(_ => {\n                this.reduceSynNumFun()\n            })\n        } catch (err) {\n            this.reduceSynNumFun()\n        }\n    }\n\n    \n\n}","import Base from './base'\n\n/**\n * 适用于微信消息队列\n */\nexport default class wxQueue extends Base {\n\n    /**\n     * 单例\n     * @param {*} baseUrl\n     * @return {?}\n     */\n    static getInstance(baseUrl) {\n        if (!wxQueue.instance) {\n            wxQueue.instance = new wxQueue(baseUrl)\n        }\n        return wxQueue.instance\n    }\n\n    _fetch(data = {}) {\n        return new Promise(resolve => {\n            wx.request({\n                url: `${this.baseUrl}`,\n                data: data,\n                method: 'POST',\n                dataType: 'json',\n                fail: (res) => {},\n                complete: (res) => {\n                    resolve()\n                }\n            })\n        })\n    }\n}","// 可以用于拓展的生命周期\nconst life = {\n    App: ['preprocess', 'onLaunch', 'onShow', 'onHide', 'onError'],\n    Page: ['preprocess', 'onLoad', 'onReady', 'onShow', 'onHide', 'onUnload', 'onPullDownRefresh', 'onReachBottom', 'onShareAppMessage'],\n    Component: ['preprocess', 'created', 'attached', 'ready', 'moved', 'detached', 'error']\n}\n\n// 用于保存所有的拓展生命周期函数\nlet lifeMixin = {}\nfor (let key in life) {\n    lifeMixin[key] = lifeMixin[key] || {}\n    for (let lifeTime of life[key]) {\n        lifeMixin[key][lifeTime] = []\n    }\n}\n\n// 基类对象\n// 在调用App、Page、Component前会被混入到对象中\nlet base = {\n    App: {},\n    Page: {},\n    Component: {}\n}\n\nlet MpExtend = function (param) {\n    // 允许接收数组形式的参数\n    if (isArray(param)) {\n        param.forEach(item => MpExtend(item))\n        return\n    }\n\n    for (const constructorName in param) {\n        // constructorName 应当是[App, Page, Component] 中的一个\n        if (!life[constructorName]) {\n            warning(constructorName, 'not found')\n            continue\n        }\n\n        const option = Object.assign({}, param[constructorName])\n        // 如果是生命周期中的某一个，作为生命周期拓展\n        for (const key in option) {\n            if (lifeMixin[constructorName][key]) {\n                lifeMixin[constructorName][key].push(option[key])\n                delete option[key]\n            }\n        }\n        // 把剩余的属性混入到基类中\n        mixin(base[constructorName], option)\n    }\n}\n\n// 重新包装的 App、Page、Component构造函数\n// 虽然都是相似的代码但是这样更利于理解和修改\nconst _App = decorate(App, function (option) {\n    mixin(option, base.App)\n    for (const lifeTime of life.App) {\n        option[lifeTime] = decorate(option[lifeTime], ...lifeMixin.App[lifeTime])\n    }\n    option['preprocess'] && option['preprocess'].call(option, option)\n})\n\nconst _Page = decorate(Page, function (option) {\n    mixin(option, base.Page)\n    for (const lifeTime of life.Page) {\n        option[lifeTime] = decorate(option[lifeTime], ...lifeMixin.Page[lifeTime])\n    }\n    option['preprocess'] && option['preprocess'].call(option, option)\n})\n\nconst _Component = decorate(Component, function (option) {\n    mixin(option, base.Component)\n    for (const lifeTime of life.Component) {\n        option[lifeTime] = decorate(option[lifeTime], ...lifeMixin.Component[lifeTime])\n    }\n    option['preprocess'] && option['preprocess'].call(option, option)\n})\n\n// 装饰函数\n// 在调用原函数之前调用所有装饰器\nfunction decorate(f, ...decorators) {\n    return function () {\n        for (const decorator of decorators) {\n            decorator && decorator.apply(this, arguments)\n        }\n        return f && f.apply(this, arguments)\n    }\n}\n\n/**\n * 实现类似混入的效果\n * 类似 Object.assign， 但在遇见相同属性名均是对象时会递归进行合并而非直接覆盖\n * @param o\n * @param mix 可以传入多个\n * 注：如果存在引用循环递归会栈溢出\n */\nfunction mixin(o, ...mixs) {\n    mixs.forEach(mix => {\n        for (const key in mix) {\n            // 两个属性都是对象则递归合并\n            if (isObject(o[key]) && isObject(mix[key])) {\n                mixin(o[key], mix[key])\n            } else {\n                o[key] = o[key] || mix[key]\n            }\n        }\n        // 拷贝symbol类型，（可惜小程序不支持）\n        for (const sym of Object.getOwnPropertySymbols(mix)) {\n            o[sym] = o[sym] || mix[sym]\n        }\n    })\n    return o\n}\n\nfunction isObject(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\"\n}\n\nfunction isArray(o) {\n    return Object.prototype.toString.call(o) === \"[object Array]\"\n}\n\nfunction warning(...msg) {\n    MpExtend.tips && console.warn('mp-extend:', ...msg)\n}\n\nObject.assign(MpExtend, {\n    mixin,\n    decorate,\n    App: _App,\n    Page: _Page,\n    Component: _Component,\n    warning,\n    tips: true\n})\nexport default MpExtend","\nimport wxQueue from '../queue/wx'\nimport mpExtend from '../util/mp-extend'\nconst baseConfig = {\n    baseUrl: '',\n    autoReportApi: true, // 是否上报api \n    autoReportPage: true, // 是否上报页面信息\n    autoReportPagePerformance: true, // 是否上报页面性能\n}\n\nconst addHook = function (options) {\n    if (wx && options && options.autoReportApi) {\n        wx._request = function (e) {\n            let _e = JSON.path(JSON.stringify(e))\n            let _fail = _e.fail || {},\n                _success = _e.success || {},\n                _complete = _e.complete || {}\n            _e.fail = function (error) {\n                _fail(error)\n                try {\n                    // 上报接口报警\n                    log.reportMonitor(trackMonitor['requestFail'], 10)\n                    // 接口报错记录\n                    log.reportPerformance(trackNetPerformance['networkError'], 10, url)\n                    // 接口报错实时日志\n                    log.error(url, `networkType:${app.globalData.networkType}-${JSON.stringify(res)}`)\n                } catch (e) {\n\n                }\n            }\n            _e.success = function (success) {\n                _success(success)\n                try {\n                    if (success.profile && success.profile.fetchStart && success.profile.responseEnd) {\n                        // api 消耗\n                        let {\n                            responseEnd,\n                            fetchStart\n                        } = res.profile\n                        let costTime = responseEnd - fetchStart\n                        // log.reportPerformance(trackNetPerformance['network'], costTime, url)\n\n                    }\n                    // 上报接口报警\n                    if (res && res.statusCode && res.statusCode != 200) {\n                        // log.reportMonitor(trackMonitor['network'], res.statusCode)\n                        // log.error(url, `networkType:${app.globalData.networkType}-${JSON.stringify(res)}`)\n                    }\n                } catch (e) {\n\n                }\n            }\n            _e.complete = function (complete) {\n                _complete(complete)\n            }\n            wx.request(_e)\n        }\n    }\n}\n\nconst performanceInit = function () {\n    if (wx.canIUse('getPerformance')) {\n        const performance = wx.getPerformance()\n        const observer = performance.createObserver((entryList) => {\n            let res = entryList.getEntries() || []\n            if (res.length == 0) {\n                return\n            }\n            res.forEach((item) => {\n                if (item) {\n                    let {\n                        entryType = '', duration = 0, name = '', path = '', moduleName = ''\n                    } = item\n                    if (entryType == 'render' && duration && path) {\n                        log.reportPerformance(trackRenderPerformance['render'], duration, path)\n                        log.reportPerformance(trackRenderPerformance['firstRender'], duration, path)\n                    } else if (entryType == 'navigation' && duration && path) {\n                        log.reportPerformance(trackRenderPerformance['navigation'], duration, path)\n                        if (name == 'appLaunch') {\n                            log.reportPerformance(trackRenderPerformance['appLaunch'], duration, path)\n                        } else if (name == 'route') {\n                            log.reportPerformance(trackRenderPerformance['route'], duration, path)\n                        }\n                    } else if (entryType == 'script' && duration && moduleName) {\n                        log.reportPerformance(trackRenderPerformance['evaluateScript'], duration, moduleName)\n                    }\n                }\n            })\n        })\n        observer.observe({\n            entryTypes: ['navigation', 'render', 'script']\n        })\n    } else {\n        return\n    }\n}\n\nconst memoryWarning = () => {\n    if (wx.canIUse('onMemoryWarning')) {\n        try {\n            wx.onMemoryWarning((res) => {\n                let level = 1,\n                    route = '';\n\n                if (!!res && !!res.level) {\n                    level = res.level\n                }\n                let pages = getCurrentPages()\n                if (pages && pages.length > 0) {\n                    route = getCurrentPages()[getCurrentPages().length - 1].__route__\n                    log.reportPerformance(trackRenderPerformance['memoryWarning'], level, route)\n                }\n            })\n        } catch (error) {\n\n        }\n    }\n}\n\nlet pagesPerformance = function (options) {\n    if (!options || !options.autoReportPagePerformance) {\n        return\n    }\n\n}\n\nconst defaultInit = {\n    App: {\n        onLaunch() {\n            console.log(`打开了小程序`)\n            console.log(mpExtend.options)\n        },\n        onError(e) {\n            console.log('执行到错误')\n            console.log(e)\n        }\n    },\n    Page: {\n        onShow() {\n            if (mpExtend.options.autoReportPage) {\n                console.log(`打开了页面 ${this.__route__}`)\n            }\n        }\n    }\n}\n\n/**\n * 初始化参数\n * @param {*} options \n */\nmpExtend.init = function (options) {\n    let _options = Object.assign(baseConfig, options)\n    this.options = _options\n    addHook(_options)\n    pagesPerformance(_options)\n    // 初始化消息队列\n    mpExtend.queue = wxQueue.getInstance(_options.baseUrl)\n}\n\nmpExtend(defaultInit)\n\nexport default mpExtend\n\n// export default class wxMonitor {\n\n//     constructor() {\n//         this._conf = {\n//             baseUrl: '',\n//             autoReportApi: true, // 是否上报api \n//             autoReportPage: true, // 是否上报页面信息\n//             autoReportPagePerformance: true, // 是否上报页面性能\n//         }\n//     }\n\n//     /**\n//      * 监控注册\n//      * @param {*} e \n//      */\n//     hookApp(e) {\n//         let self = this,\n//             t = {\n//                 onError: function (t) {\n//                     let n = 1 === arguments.length ? [arguments[0]] : Array.apply(null, arguments),\n//                         r = e.onError;\n//                     try {\n//                         self.error(t)\n//                     } catch (t) {\n//                         util.warn(\"[cloudMonitor] error in hookApp:onError\", t)\n//                     }\n//                     if (\"function\" == typeof r) {\n//                         return r.apply(this, n)\n//                     }\n//                 }\n//             }\n\n//         return util.ext({}, e, t)\n//     }\n\n//     /**\n//      * 监控执行\n//      * @param {*} options \n//      */\n//     init(options) {\n//         if (!options || !options.pid) {\n//             util.warn(\"[cloudMonitor] not set pid\");\n//             return\n//         }\n//         let self = this\n//         try {\n//             this.setConfig({}, function () {\n//                 self.addHook()\n//                 // 是否需要落pv数据\n//                 if (self && self._conf && self._conf.autoReportPage) {\n//                     self.onReady(() => {\n//                         self._log('pv')\n//                     })\n//                 }\n//             })\n//         } catch (err) {\n//             util.warn(\"[cloudMonitor] set config error\");\n//         }\n\n\n//     }\n\n//     /**\n//      * @param {*} fun \n//      */\n//     onReady(fun) {\n//         if (typeof fun != 'function') {\n//             util.warn('[cloudMonitor] not function')\n//             return\n//         }\n//         this._conf.uid ? fun() : setTimeout(() => {\n//             this.onReady(fun)\n//         }, 100)\n//     }\n\n//     /**\n//      * 错误信息\n//      * @param {*} t \n//      * @param {*} e \n//      */\n//     error(t, e) {\n//         if (!t) {\n//             return util_1.warn(\"[cloudMonitor] invalid param e: \" + t), this\n//         }\n//         1 === arguments.length ? (\"string\" == typeof t && (t = {\n//             message: t\n//         }, e = {}), \"object\" == typeof t && (e = t = t.error || t)) : (\"string\" == typeof t && (t = {\n//             message: t\n//         }), \"object\" != typeof e && (e = {}));\n//         let name = t.name || 'CustomError'\n//         let useData = {\n//             begin: Date.now(),\n//             cate: name,\n//             msg: t.message,\n//             file: e.filename || \"\",\n//             line: e.lineno || \"\",\n//             col: e.colno || \"\",\n//         }\n\n//     }\n\n//     getConfig(e) {\n//         return {}\n//         // return e ? this._conf[e] : util.ext({}, this._conf)\n//     }\n\n//     /**\n//      * 初始化参数\n//      * @param {*} options\n//      * @param {*} fun \n//      */\n//     setConfig(options, fun) {\n//         this.initQueue()\n//         fun()\n//     }\n\n//     initQueue() { }\n\n//     /**\n//      * 执行log 存储\n//      * @param {*} type \n//      */\n//     _log(type) {\n//         switch (type) {\n//             case 'pv':\n//                 this._logPv()\n//                 break\n//             default:\n\n//         }\n//     }\n\n//     /**\n//      * pv 数据\n//      */\n//     _logPv() {\n\n//     }\n\n//     /**\n//      * 代理\n//      */\n//     addHook() {\n\n//     }\n\n//     /**\n//      * 单例\n//      * @return {?}\n//      */\n//     static getInstance() {\n//         if (!wxMonitor.instance) {\n//             wxMonitor.instance = new wxMonitor()\n//             wxMonitor.queue = null\n//         }\n//         return wxMonitor.instance\n//     }\n\n//     /**\n//      * wx 消息队列重写方法\n//      */\n//     initQueue() {\n//         try {\n//             // 消息队列初始化\n//             wxMonitor.queue = wxQueue.getInstance(this._conf.baseUrl)\n//         } catch (err) {\n//             util.warn(\"[cloudMonitor] queue init:error\", t)\n//         }\n//     }\n\n//     /**\n//      * 微信代理方法\n//      */\n//     addHook() {\n//         let config = this._conf\n//         if (config && config.autoReportPage) {\n//             if (typeof wx.navigateTo == 'function') {\n//                 let _navigateTo = wx.navigateTo\n//                 wx['navigateTo'] = function (e) {\n//                     console.log(e)\n//                 }\n//                 let _wx = Object.getOwnPropertyDescriptor(wx, \"navigateTo\");\n//                 console.log(_wx)\n//                 _wx && _wx.writable && (wx.navigateTo = function (e) {\n//                     console.log('测试')\n//                     console.log(e)\n//                 })\n//             }\n//         }\n\n//     }\n\n\n// }\n","import wxMonitor from './log/wx'\n\n/**\n * 监控导出\n */\nexport default {\n    wxMonitor\n}"],"names":["Base","baseUrl","requestQueue","requestTimmer","undefined","synRequestNum","synNum","retryNum","log","push","onReady","delay","clear","logError","fun","e","setTimeout","clearTimeout","pop","handleLog","length","Queue","instance","JSON","parse","stringify","param","viewData","_fetch","then","_","reduceSynNumFun","err","wxQueue","data","Promise","resolve","wx","request","url","method","dataType","fail","res","complete","life","App","Page","Component","lifeMixin","key","lifeTime","base","MpExtend","isArray","forEach","item","constructorName","warning","option","Object","assign","mixin","_App","decorate","call","_Page","_Component","f","decorators","decorator","apply","arguments","o","mixs","mix","isObject","getOwnPropertySymbols","sym","prototype","toString","msg","tips","console","warn","baseConfig","autoReportApi","autoReportPage","autoReportPagePerformance","addHook","options","_request","_e","path","_fail","_success","success","_complete","error","reportMonitor","trackMonitor","reportPerformance","trackNetPerformance","app","globalData","networkType","profile","fetchStart","responseEnd","costTime","statusCode","pagesPerformance","defaultInit","onLaunch","mpExtend","onError","onShow","__route__","init","_options","queue","getInstance","wxMonitor"],"mappings":"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B,MAAAA,OAAO,CAAC3E,GAAR;AACA2E,MAAAA,OAAO,CAAC3E,GAAR,CAAY0G,QAAQ,CAACxB,OAArB;AACH,KAJA;AAKDyB,IAAAA,OALC,mBAKOpG,CALP,EAKU;AACPoE,MAAAA,OAAO,CAAC3E,GAAR,CAAY,OAAZ;AACA2E,MAAAA,OAAO,CAAC3E,GAAR,CAAYO,CAAZ;AACH;AARA,GADW;AAWhBgC,EAAAA,IAAI,EAAE;AACFqE,IAAAA,MADE,oBACO;AACL,UAAIF,QAAQ,CAACxB,OAAT,CAAiBH,cAArB,EAAqC;AACjCJ,QAAAA,OAAO,CAAC3E,GAAR,0CAAqB,KAAK6G,SAA1B;AACH;AACJ;AALC;AAXU,CAApB;AAoBA;AACA;AACA;AACA;;AACAH,QAAQ,CAACI,IAAT,GAAgB,UAAU5B,OAAV,EAAmB;AAC/B,MAAI6B,QAAQ,GAAG3D,MAAM,CAACC,MAAP,CAAcwB,UAAd,EAA0BK,OAA1B,CAAf;;AACA,OAAKA,OAAL,GAAe6B,QAAf;AACA9B,EAAAA,OAAO,CAAC8B,QAAD,CAAP;AACAR,EAAAA,gBAAgB,CAACQ,QAAD,CAAhB,CAJ+B;;AAM/BL,EAAAA,QAAQ,CAACM,KAAT,GAAiBvF,OAAO,CAACwF,WAAR,CAAoBF,QAAQ,CAACtH,OAA7B,CAAjB;AACH,CAPD;;AASAiH,QAAQ,CAACF,WAAD,CAAR;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;;AClWA;AACA;AACA;;AACA,YAAe;AACXU,EAAAA,SAAS,EAATA;AADW,CAAf;;;;"}