{"version":3,"file":"index.js","sources":["../src/util/index.js","../src/queue/base.js","../src/queue/wx.js","../src/config/wx.js","../src/conmmon/subscribe.js","../src/util/help.js","../src/wx-mini/util.js","../src/wx-mini/handleWxEvents.js","../src/wx-mini/constant.js","../src/wx-mini/replace.js","../src/wx-mini/load.js","../src/wx-mini/wxInit.js","../src/config/ali.js","../src/conmmon/initBaseOptions.js","../src/conmmon/initLog.js","../src/wx-mini/wx.js","../src/ali/util.js","../src/ali/HandleAliEvents.js","../src/ali/replace.js","../src/ali/load.js","../src/queue/ali.js","../src/ali/aliInit.js","../src/ali/ali.js","../src/index.js"],"sourcesContent":["/**\n * 生成用户唯一标识码\n */\nfunction generateUUID() {\n    let uuid = '',\n        d = new Date().getTime()\n\n    uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        let r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16)\n    })\n\n    return uuid\n}\n\nfunction getCwarn() {\n    let t = \"object\" == typeof console ? console.warn : noop;\n    try {\n        let e = {\n            warn: t\n        };\n        e.warn.call(e)\n    } catch (n) {\n        return noop\n    }\n    return t\n}\n\n/**\n * encodeURIComponent 转换\n * @param {*} t \n * @param {*} e \n */\nfunction encode(t, e) {\n    try {\n        t = e ? encodeURIComponent(t).replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\") : encodeURIComponent(t)\n    } catch (n) { }\n    return t\n}\n\n/**\n * 字符串替换\n * @param {*} str \n * @param {*} find \n * @param {*} replace \n */\nfunction replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n}\n\n\n/**\n * @param {*} t \n */\nfunction ext(t) {\n    for (let e = 1, n = arguments.length; e < n; e++) {\n        let r = arguments[e];\n        for (let o in r) {\n            Object.prototype.hasOwnProperty.call(r, o) && (t[o] = r[o])\n        }\n    }\n    return t\n}\n\n/**\n * 日期格式化\n * @param {*} date \n * @param {*} fmt \n */\nfunction dateFormat(date, fmt) {\n    if (!date || !(date instanceof Date)) {\n        return \"\";\n    }\n    var o = {\n        \"M+\": date.getMonth() + 1, // 月份\n        \"d+\": date.getDate(), // 日\n        \"h+\": date.getHours(), // 小时\n        \"m+\": date.getMinutes(), // 分\n        \"s+\": date.getSeconds(), // 秒\n        \"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度\n        \"S\": date.getMilliseconds() // 毫秒\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\n/**\n * 合并\n */\nfunction __assign() {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\nlet warn = getCwarn\n\nexport default {\n    ext,\n    warn,\n    encode,\n    replaceAll,\n    generateUUID,\n    dateFormat,\n    __assign\n}","\n/**\n * 消息队列 Base\n */\nexport default class Base {\n    constructor(baseUrl) {\n        this.api = \"/api/save/log\"\n        this.baseUrl = baseUrl\n        this.requestQueue = [] // 队列\n        this.requestTimmer = undefined\n        this.synRequestNum = 4\n        this.synNum = 0\n        this.retryNum = 1 // 重试上报机制\n    }\n\n    /**\n     * 同步队列 （传入对象必须要有logType，logError）\n     * @param {*} log 队列日志\n     */\n    pushToQueue(log) {\n        {\n            // 简单先同步放入数组中\n            this.requestQueue.push(log)\n            return this.onReady(() => {\n                this.requestTimmer = this.delay(() => {\n                    this.clear()\n                }, this.requestQueue[0] && (!!this.requestQueue[0].logError && this.requestQueue[0].logError > 0) ? 3e3 : -1)\n            })\n        }\n    }\n\n    /**\n     * 宏任务（检测是否有唯一对应值）\n     * @param {*} fun\n     */\n    onReady(fun) {\n        if (typeof fun != 'function') {\n            return\n        }\n        // 检测是否有 openId 如果没有则延迟上报\n        if (fun) {\n            fun()\n        }\n    }\n\n    /**\n     * 执行队列\n     * @param {*} fun\n     * @param {*} e\n     */\n    delay(fun, e) {\n        if (!fun && typeof fun != 'function') return null\n        return e === -1 ? (fun(), null) : setTimeout(fun, e || 0)\n    }\n\n    /**\n     * 并发限制\n     * @return {?}\n     */\n    clear() {\n        var e\n        if (this.synNum > this.synRequestNum) {\n            return clearTimeout(this.requestTimmer), this.requestTimmer = setTimeout(() => {\n                this.clear()\n            }, 50)\n        }\n        for (clearTimeout(this.requestTimmer), this.requestTimmer = null; this.synNum < this.synRequestNum && (e = this.requestQueue.pop()); this.synNum++) {\n            this.handleLog(e)\n        }\n        // 执行完如果还有数据则继续执行（放到宏任务）\n        !!this.requestQueue.length && (this.requestTimmer = setTimeout(() => {\n            this.clear()\n        }, 50))\n\n    }\n\n    /**\n     * 清空队列\n     * @return {?}\n     */\n    clearAll() {\n        this.requestQueue = []\n        this.requestTimmer = null\n        this.synNum = 0\n    }\n\n    /**\n     * 并发数减一\n     * @return {?}\n     */\n    reduceSynNumFun() {\n        \n    }\n\n    /**\n     * 上报\n     * @param {*} e logType判断上传接口是哪种类型 pv：上报pv 逻辑 mv：上报mv逻辑 logError：0 代码重新上报次数0次，用int后续方便扩展\n     */\n    handleLog(e) {\n        // 深拷贝避免影响其他数据\n        let log = JSON.parse(JSON.stringify(e))\n        try {\n            this._fetch(log).then(_ => {\n                this.reduceSynNumFun()\n            })\n        } catch (err) {\n            this.reduceSynNumFun()\n        }\n    }\n\n    \n\n}","import Base from './base'\n\n/**\n * 适用于微信消息队列\n */\nexport default class wxQueue extends Base {\n    /**\n     * 单例\n     * @param {*} baseUrl\n     * @return {?}\n     */\n    static getInstance(baseUrl) {\n        if (!wxQueue.instance) {\n            wxQueue.instance = new wxQueue(baseUrl)\n        }\n        return wxQueue.instance\n    }\n\n    /**\n     * 并发数减一\n     * @return {?}\n     */\n    reduceSynNumFun() {\n        wxQueue.instance.synNum--\n        return this\n    }\n\n    _fetch(data = {}) {\n        return new Promise(resolve => {\n            wx.request({\n                url: `${this.baseUrl}${this.api}`,\n                data: data,\n                method: 'POST',\n                dataType: 'json',\n                fail: (res) => {},\n                complete: (res) => {\n                    resolve()\n                }\n            })\n        })\n    }\n}","export const WX_TYPE = 2\nexport const WxRouteEvents = ['switchTab', 'reLaunch', 'redirectTo', 'navigateTo', 'navigateBack', 'routeFail']\nexport const WxHookMethods = ['request']\nexport const WX_PROJECT_VERSION = '1.0.0' // 项目版本号\nexport const HTTP_SUCCESS = 1\nexport const HTTP_ERROR = 2\nexport const APP_CONFIG = ['onError']\nexport const PAGE_CPNFIG = ['onLoad']","const handlers = {}\nconst appHandles = {}\nconst pageHandles = {}\n\n/**\n * @param {*} handler \n * @param {*} handleType \n */\nexport function subscribeEvent(handler, handleType = '') {\n    if (!handler) {\n        return\n    }\n    switch (handleType) {\n        case 'app':\n            appHandles[handler.type] = appHandles[handler.type] || []\n            appHandles[handler.type].push(handler.callback)\n            break\n        case 'page':\n            pageHandles[handler.type] = appHandles[handler.type] || []\n            pageHandles[handler.type].push(handler.callback)\n            break\n        default:\n            handlers[handler.type] = handlers[handler.type] || []\n            handlers[handler.type].push(handler.callback)\n    }\n\n}\n\n/**\n * @param {*} type \n * @param {*} data \n * @param {*} handleType\n */\nexport function triggerHandlers(type, data, handleType = '') {\n    switch (handleType) {\n        case 'app':\n            if (!type || !appHandles[type]) return\n            appHandles[type].forEach((callback) => {\n                callback(data)\n            })\n            break\n        case 'page':\n            if (!type || !pageHandles[type]) return\n            pageHandles[type].forEach((callback) => {\n                callback(data)\n            })\n            break\n        default:\n            if (!type || !handlers[type]) return\n            handlers[type].forEach((callback) => {\n                callback(data)\n            })\n    }\n}\n\n","\n/**\n * 重写对象上面的某个属性\n * @param {*} source 需要被重写的对象\n * @param {*} name 需要被重写对象的key\n * @param {*} replacement 以原有的函数作为参数，执行并重写原有函数\n * @param {*} isForced \n */\nexport function replaceOld(source, name, replacement, isForced = false) {\n    if (name in source || isForced) {\n        const original = source[name]\n        const wrapped = replacement(original)\n        if (typeof wrapped === 'function') {\n            source[name] = wrapped\n        }\n    }\n}\n\n// 函数节流\n/**\n *\n * ../param fn 需要节流的函数\n * ../param delay 节流的时间间隔\n * ../returns 返回一个包含节流功能的函数\n */\nexport const throttle = (fn, delay) => {\n    let canRun = true\n    return function (...args) {\n        if (!canRun) return\n        fn.apply(this, args)\n        canRun = false\n        setTimeout(() => {\n            canRun = true\n        }, delay)\n    }\n}\n\nexport const nativeToString = Object.prototype.toString\n\n/**\n * 校验类型\n * @param {*} type \n */\nexport function isType(type) {\n    return function (value) {\n        return nativeToString.call(value) === \"[object \" + type + \"]\";\n    };\n}\n\n\n\n// 校验枚举\nexport const variableTypeDetection = {\n    isNumber: isType('Number'),\n    isString: isType('String'),\n    isBoolean: isType('Boolean'),\n    isNull: isType('Null'),\n    isUndefined: isType('Undefined'),\n    isSymbol: isType('Symbol'),\n    isFunction: isType('Function'),\n    isObject: isType('Object'),\n    isArray: isType('Array'),\n    isProcess: isType('process'),\n    isWindow: isType('Window')\n};\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {../link isError}.\n *\n * ../param wat A value to be checked.\n * ../returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (nativeToString.call(wat)) {\n        case '[object Error]':\n            return true\n        case '[object Exception]':\n            return true\n        case '[object DOMException]':\n            return true\n        default:\n            return isInstanceOf(wat, Error)\n    }\n}\n\n/**\n * 检查是否是空对象\n * ../param obj 待检测的对象\n */\nexport function isEmptyObject(obj) {\n    return variableTypeDetection.isObject(obj) && Object.keys(obj).length === 0\n}\n\nexport function isEmpty(wat) {\n    return (variableTypeDetection.isString(wat) && wat.trim() === '') || wat === undefined || wat === null\n}\n\n/**\n * Checks whether given value has a then function.\n * ../param wat A value to be checked.\n */\n// export function isThenable(wat: any): boolean {\n//   // tslint:disable:no-unsafe-any\n//   return Boolean(wat && wat.then && typeof wat.then === 'function')\n//   // tslint:enable:no-unsafe-any\n// }\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {../link isInstanceOf}.\n *\n * ../param wat A value to be checked.\n * ../param base A constructor to be used in a check.\n * ../returns A boolean representing the result.\n */\nexport function isInstanceOf(wat, base) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return wat instanceof base\n    } catch (_e) {\n        return false\n    }\n}\n\nexport function isExistProperty(obj, key) {\n    return obj.hasOwnProperty(key)\n}","import { variableTypeDetection } from '../util/help'\n\n/**\n * \n * @param {*} delta \n */\nexport function getNavigateBackTargetUrl(delta) {\n    if (!variableTypeDetection.isFunction(getCurrentPages)) {\n        return '';\n    }\n    var pages = getCurrentPages();\n    if (!pages.length) {\n        return 'App';\n    }\n    delta = delta || 1;\n    var toPage = pages[pages.length - delta];\n    return setUrlQuery(toPage.route, toPage.options);\n}\n\n/**\n * url\n * @param {*} url \n * @param {*} query \n */\nexport function setUrlQuery(url, query) {\n    var queryArr = [];\n    Object.keys(query).forEach(function (k) {\n        queryArr.push(k + \"=\" + query[k]);\n    });\n    if (url.indexOf('?') !== -1) {\n        url = url + \"&\" + queryArr.join('&');\n    }\n    else {\n        url = url + \"?\" + queryArr.join('&');\n    }\n    return url;\n}\n\n/**\n * 获取当前url\n */\nexport function getPage() {\n    return getCurrentPages()[getCurrentPages().length - 1].__route__\n}\n\n","import { getPage } from './util'\n\n\nconst HandleWxAppEvents = {\n    onError(e) {\n        try {\n            if (!this.wxMonitor) return\n            let vm = this.wxMonitor\n            let data = {\n                simpleUrl: getPage(),\n                errorMessage: String(e)\n            }\n            vm.logSave('js_error', data)\n        } catch (e) { }\n    }\n}\n\nconst HandleWxPageEvents = {\n    onLoad() {\n        try {\n            if (!this.wxMonitor) return\n            let vm = this.wxMonitor,\n                toUrl = getPage()\n            let data = {\n                simpleUrl: toUrl,\n                referrer: vm.referrerPage || \"\",\n            }\n            vm.logSave('page_pv', data)\n            vm.referrerPage = toUrl\n        } catch (e) { }\n    }\n}\n\nexport { HandleWxAppEvents, HandleWxPageEvents }","export const ELinstenerTypes = {\n    Touchmove: 'touchmove',\n    Tap: 'tap'\n}","import * as config from '../config/wx'\nimport util from '../util/index'\nimport { subscribeEvent, triggerHandlers } from '../conmmon/subscribe'\nimport { replaceOld, throttle } from '../util/help'\nimport { HandleWxAppEvents, HandleWxPageEvents } from './handleWxEvents'\nimport { ELinstenerTypes } from './constant'\nimport { getNavigateBackTargetUrl, getPage } from './util'\n\n/**\n * 添加函数\n * @param {*} handler \n * @param {*} handleType\n */\nexport function addReplaceHandler(handler, handleType) {\n    subscribeEvent(handler, handleType)\n}\n\nexport function replaceApp(wxMonitor) {\n    if (!App) {\n        return\n    }\n    HandleWxAppEvents.wxMonitor = wxMonitor\n\n    const originApp = App\n    App = function (appOptions) {\n        let methods = config.APP_CONFIG\n        methods.forEach((method) => {\n            addReplaceHandler({\n                callback: (data) => HandleWxAppEvents[method.replace('AppOn', 'on')](data),\n                type: method\n            }, 'app')\n            replaceOld(\n                appOptions,\n                method.replace('AppOn', 'on'),\n                function (originMethod) {\n                    return function (...args) {\n                        triggerHandlers.apply(null, [method, ...args, 'app'])\n                        if (originMethod) {\n                            originMethod.apply(this, args)\n                        }\n                    }\n                },\n                true\n            )\n        })\n        return originApp(appOptions)\n    }\n}\n\n/**\n * page\n * @param {*} wxMonitor \n */\nexport function replacePage(wxMonitor) {\n    if (!Page) {\n        return\n    }\n    HandleWxPageEvents.wxMonitor = wxMonitor\n\n    const originPage = Page\n    Page = function (pageOptions) {\n        let methods = config.PAGE_CPNFIG\n        // pv uv 自动化\n        methods.forEach(method => {\n            addReplaceHandler({\n                callback: (data) => HandleWxPageEvents[method.replace('PageOn', 'on')](data),\n                type: method\n            }, 'page')\n            replaceOld(\n                pageOptions,\n                method.replace('PageOn', 'on'),\n                function (originMethod) {\n                    return function (...args) {\n                        triggerHandlers.apply(null, [method, ...args, 'page'])\n                        if (originMethod) {\n                            originMethod.apply(this, args)\n                        }\n                    }\n                },\n                true\n            )\n        })\n        /**\n         * 记录用户行为\n         * @param {*} e \n         */\n        function gestureTrigger(e) {\n            e.mitoProcessed = true // 给事件对象增加特殊的标记，避免被无限透传\n            console.log('测试点击封装')\n            console.log(e)\n        }\n        function isNotAction(method) {\n            // 如果是method中处理过的方法，则不是处理用户手势行为的方法\n            return methods.find((m) => m.replace('PageOn', 'on') === method)\n        }\n        const throttleGesturetrigger = throttle(gestureTrigger, 500)\n        const linstenerTypes = [ELinstenerTypes.Touchmove, ELinstenerTypes.Tap]\n        // 用户行为重写click\n        Object.keys(pageOptions).forEach((m) => {\n            if ('function' !== typeof pageOptions[m] || isNotAction(m)) {\n                return\n            }\n            replaceOld(\n                pageOptions,\n                m,\n                function (originMethod) {\n                    return function (...args) {\n                        const e = args[0]\n                        if (e && e.type && e.currentTarget && !e.mitoProcessed) {\n                            if (linstenerTypes.indexOf(e.type)) {\n                                throttleGesturetrigger(e)\n                            }\n                        }\n                        originMethod.apply(this, args)\n                    }\n                },\n                true\n            )\n        })\n        return originPage.call(this, pageOptions)\n    }\n\n}\n\n/**\n * 路由跳转行为\n * @param {*} wxMonitor \n */\nexport function replaceRoute(wxMonitor) {\n    const vm = wxMonitor\n    // 代理跳转\n    let WxRouteEvents = config.WxRouteEvents\n    WxRouteEvents.forEach(method => {\n        let originMethod = wx[method];\n        Object.defineProperty(wx, method, {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: function (options) {\n                var toUrl;\n                if (method === WxRouteEvents.NavigateBack) {\n                    toUrl = getNavigateBackTargetUrl(options.delta);\n                } else {\n                    toUrl = options.url;\n                }\n                try {\n                    let data = {\n                        simpleUrl: toUrl,\n                        referrer: vm.referrerPage || \"\",\n                    }\n                    // vm.logSave('page_pv', data)\n                    // vm.referrerPage = toUrl\n                } catch (e) {\n                    util.warn('[cloudMonitor] url error')\n                }\n                return originMethod.call(this, options);\n            }\n        })\n    })\n\n}\n\n/**\n * 代理请求\n * @param {*} wxMonitor \n */\nexport function replaceNetwork(wxMonitor) {\n    let vm = wxMonitor\n    let WxHookMethods = config.WxHookMethods\n    WxHookMethods.forEach(hook => {\n        let originRequest = wx[hook];\n        Object.defineProperty(wx, hook, {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: function () {\n                let args = [];\n                let startTime = new Date().getTime()\n                for (let _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                let options$1 = args[0];\n                let url = options$1.url || \"\"\n\n                let reqData;\n                if (hook === 'request') {\n                    reqData = options$1.data;\n                }\n                let successHandler = function (res) {\n                    try {\n                        // 上报接口报警\n                        if (!!res && res.statusCode && res.statusCode != 200) {\n                            let data = {\n                                simpleUrl: getPage(),\n                                httpUrl: options$1.url || \"\",\n                                httpUploadType: config.HTTP_ERROR,\n                                responseText: JSON.stringify(res),\n                                httpStatus: res.statusCode\n                            }\n                            if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                                vm.logSave('http_log', data)\n                            }\n                        } else {\n                            let endTime = new Date().getTime()\n                            let consumeData = {\n                                simpleUrl: getPage(),\n                                loadTime: endTime - startTime,\n                                httpUrl: options$1.url || \"\",\n                                httpUploadType: config.HTTP_SUCCESS,\n                                responseText: JSON.stringify(res),\n                                httpStatus: res.statusCode || 200\n                            }\n                            if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                                vm.logSave('http_log', consumeData)\n                            }\n                        }\n                    } catch (e) {\n                        util.warn('[cloudMonitor] http error')\n                    }\n                    if (typeof options$1.success === 'function') {\n                        return options$1.success(res);\n                    }\n                };\n                let failHandler = function (err) {\n                    try {\n                        let data = {\n                            simpleUrl: getPage(),\n                            httpUrl: options$1.url || \"\",\n                            httpUploadType: config.HTTP_ERROR,\n                            responseText: JSON.stringify(err),\n                            httpStatus: '0'\n                        }\n                        if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                            vm.logSave('http_log', data)\n                        }\n                    } catch (e) {\n                        util.warn('[cloudMonitor] http error')\n                    }\n                    if (typeof options$1.fail === 'function') {\n                        return options$1.fail(err);\n                    }\n                };\n                let actOptions = util.__assign(util.__assign({}, options$1), { success: successHandler, fail: failHandler });\n                return originRequest.call(this, actOptions);\n            }\n        })\n    })\n}\n\n","import { replaceApp, replaceNetwork, replacePage } from './replace'\n\n/**\n * 初始化\n * @param {*} wxMonitor \n */\nexport function setupReplace(wxMonitor) {\n    replacePage(wxMonitor)\n    replaceApp(wxMonitor)\n    replaceNetwork(wxMonitor)\n}","import util from '../util/index'\nimport wxQueue from '../queue/wx'\nimport * as config from '../config/wx'\nimport { setupReplace } from './load'\n\nconst baseConfig = {\n    baseUrl: '',\n    autoReportApi: true, // 是否上报api \n    autoReportPage: true, // 是否上报页面信息\n    autoReportPagePerformance: true, // 是否上报页面性能\n}\n\n/**\n * 初始化微信sdk\n * @param {*} wxMonitor \n */\nexport function initMixin(wxMonitor) {\n    /**\n     * 初始化\n     * @param {*} options \n     */\n    wxMonitor._init = function (options) {\n        const vm = this\n        if (!options || !options.app) {\n            util.warn('[cloudMonitor] not set app')\n        }\n        if (!options || !options.baseUrl) {\n            util.warn('[cloudMonitor] not set baseUrl')\n        }\n        let _options = Object.assign(baseConfig, options)\n        vm.$options = _options\n        vm.queue = wxQueue.getInstance(_options.baseUrl)\n        // 初始化\n        vm.baseOptions = '' // 初始化上传参数\n        vm.referrerPage = '' // 上一个页面\n        vm.userId = '' // 用户唯一标识\n        vm.SOURCE_TYPE = config.WX_TYPE\n        vm.optionsInit(_options)\n        setupReplace(wxMonitor)\n    }\n}","export const ALI_TYPE = 3\nexport const ALI_PROJECT_VERSION = '1.0.0' // 项目版本号\nexport const APP_CONFIG = ['onError']","import { WX_TYPE, WX_PROJECT_VERSION } from '../config/wx'\nimport { ALI_TYPE, ALI_PROJECT_VERSION } from '../config/ali'\nimport util from '../util/index'\n\n/**\n * 初始化\n * @param {*} wxMonitor \n * @param {*} type \n */\nexport function initBaseOptions(monitor) {\n    monitor.optionsInit = function (option) {\n        let vm = this\n        let type = vm.SOURCE_TYPE\n        switch (type) {\n            case WX_TYPE:\n                // 初始化上传参数\n                wx.getSystemInfo({\n                    success: (res) => {\n                        vm.baseOptions = {\n                            app: option.app || \"\",\n                            type: WX_TYPE, // 代表微信小程序\n                            projectVersion: option.projectVersion || WX_PROJECT_VERSION, // 项目版本号\n                            customerKey: util.generateUUID(), // 会话id\n                            os: res.system.indexOf('iOS') === -1 ? 'Android' : 'IOS', // 系统信息\n                            deviceName: res.model, // 手机型号\n                            brand: res.brand, // 手机品牌\n                            browserVersion: res.version, // 小程序版本号\n                        }\n                    }\n                });\n                break\n            case ALI_TYPE:\n                // 初始化上传参数\n                my.getSystemInfo({\n                    success: (res) => {\n                        vm.baseOptions = {\n                            app: option.app || \"\",\n                            type: ALI_TYPE, // 代表微信小程序\n                            projectVersion: option.projectVersion || ALI_PROJECT_VERSION, // 项目版本号\n                            customerKey: util.generateUUID(), // 会话id\n                            os: res.platform === 'iOS' ? 'IOS' : 'Android', // 系统信息\n                            deviceName: res.model, // 手机型号\n                            brand: res.brand, // 手机品牌\n                            browserVersion: res.version, // 小程序版本号\n                        }\n                    }\n                });\n                break\n            default:\n                break\n        }\n    }\n\n\n}","import util from '../util/index'\n\n\nexport function initSaveLog(monitor) {\n    /**\n     * 上传日志\n     * @param {*} type \n     * @param {*} data \n     */\n    monitor.logSave = function (type, data) {\n        let useData,\n            logData = JSON.parse(JSON.stringify(data)),\n            vm = this\n        if (!vm.baseOptions) {\n            vm.optionsInit(vm.options)\n            setTimeout(() => {\n                this.logSave(type, data)\n            }, 500)\n            return\n        }\n        switch (type) {\n            case 'page_pv':\n                useData = Object.assign(logData, vm.baseOptions)\n                useData.userId = vm.userId || \"\", // 用户标识\n                    useData.uploadType = type\n                useData.mobileTime = util.dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')\n                vm.queue.pushToQueue(useData)\n                break\n            case 'js_error':\n                useData = Object.assign(logData, vm.baseOptions)\n                useData.userId = vm.userId || \"\", // 用户标识\n                    useData.uploadType = type\n                useData.mobileTime = util.dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')\n                vm.queue.pushToQueue(useData)\n                break\n            case 'http_log':\n                useData = Object.assign(logData, vm.baseOptions)\n                useData.userId = vm.userId || \"\", // 用户标识\n                    useData.uploadType = type\n                useData.mobileTime = util.dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')\n                vm.queue.pushToQueue(useData)\n                break\n            default:\n\n        }\n    }\n}","import { initMixin } from './wxInit'\nimport { initBaseOptions } from '../conmmon/initBaseOptions'\nimport { initSaveLog } from '../conmmon/initLog'\n\nlet wxMonitor = {}\n\nwxMonitor.init = function(options) {\n    this._init(options)\n}\n\ninitMixin(wxMonitor)\ninitBaseOptions(wxMonitor)\ninitSaveLog(wxMonitor)\n\n\nexport default wxMonitor","/**\n * 获取当前url\n */\nexport function getPage() {\n    return getCurrentPages()[getCurrentPages().length - 1].route || \"\"\n}","import { getPage } from './util'\n\n\nconst HandleAliAppEvents = {\n    onError(e) {\n        try {\n            if (!this.aliMonitor) return\n            let vm = this.aliMonitor\n            let data = {\n                simpleUrl: getPage(),\n                errorMessage: String(e)\n            }\n            vm.logSave('js_error', data)\n        } catch (e) {\n        }\n    }\n}\n\nconst HandleAliPageEvents = {\n    onLoad() {\n        try {\n            if (!this.aliMonitor) return\n            let vm = this.aliMonitor,\n                toUrl = getPage()\n            let data = {\n                simpleUrl: toUrl,\n                referrer: vm.referrerPage || \"\",\n            }\n            vm.logSave('page_pv', data)\n            vm.referrerPage = toUrl\n        } catch (e) {\n\n        }\n    }\n}\n\nexport { HandleAliAppEvents, HandleAliPageEvents }","import * as config from '../config/ali'\nimport util from '../util/index'\nimport { subscribeEvent, triggerHandlers } from '../conmmon/subscribe'\nimport { replaceOld, throttle } from '../util/help'\nimport { HandleAliAppEvents } from './HandleAliEvents'\n\n/**\n * 添加函数\n * @param {*} handler \n * @param {*} handleType\n */\nexport function addReplaceHandler(handler, handleType) {\n    subscribeEvent(handler, handleType)\n}\n\n/**\n * page\n * @param {*} aliMonitor \n */\nexport function replacePage(aliMonitor) {\n\n}\n\n/**\n * app\n * @param {*} aliMonitor \n */\nexport function replaceApp(aliMonitor) {\n    if (!App) {\n        return\n    }\n    HandleAliAppEvents.aliMonitor = aliMonitor\n    const originApp = App\n    App = function (appOptions) {\n        let methods = config.APP_CONFIG\n        methods.forEach((method) => {\n            addReplaceHandler({\n                callback: (data) => HandleAliAppEvents[method.replace('AppOn', 'on')](data),\n                type: method\n            }, 'app')\n            replaceOld(\n                appOptions,\n                method.replace('AppOn', 'on'),\n                function (originMethod) {\n                    return function (...args) {\n                        triggerHandlers.apply(null, [method, ...args, 'app'])\n                        if (originMethod) {\n                            originMethod.apply(this, args)\n                        }\n                    }\n                },\n                true\n            )\n        })\n        return originApp(appOptions)\n    }\n\n}\n\n\n/**\n * request 封装\n * @param {*} aliMonitor \n */\nexport function replaceNetwork(aliMonitor) {\n    \n}","import { replacePage, replaceApp, replaceNetwork } from './replace'\n\n/**\n * 初始化\n * @param {*} aliMonitor \n */\nexport function setupReplace(aliMonitor) {\n    replacePage(aliMonitor)\n    replaceApp(aliMonitor)\n    replaceNetwork(aliMonitor)\n}","import Base from './base'\n\n/**\n * 适用于微信消息队列\n */\nexport default class aliQueue extends Base {\n    /**\n     * 单例\n     * @param {*} baseUrl\n     * @return {?}\n     */\n    static getInstance(baseUrl) {\n        if (!aliQueue.instance) {\n            aliQueue.instance = new aliQueue(baseUrl)\n        }\n        return aliQueue.instance\n    }\n\n    /**\n     * 并发数减一\n     * @return {?}\n     */\n    reduceSynNumFun() {\n        aliQueue.instance.synNum--\n        return this\n    }\n\n    _fetch(data = {}) {\n        return new Promise(resolve => {\n            my.request({\n                url: `${this.baseUrl}${this.api}`,\n                data: data,\n                method: 'POST',\n                dataType: 'json',\n                fail: (res) => {},\n                complete: (res) => {\n                    resolve()\n                }\n            })\n        })\n    }\n}","import util from '../util/index'\nimport { setupReplace } from './load'\nimport aliQueue from '../queue/ali'\nimport * as config from '../config/ali'\n\nconst baseConfig = {\n    baseUrl: '',\n    autoReportApi: true, // 是否上报api \n    autoReportPage: true, // 是否上报页面信息\n    autoReportPagePerformance: true, // 是否上报页面性能\n}\n\nexport function initMixin(aliMonitor) {\n    aliMonitor._init = function (options) {\n        const vm = this\n        if (!options || !options.app) {\n            util.warn('[cloudMonitor] not set app')\n        }\n        if (!options || !options.baseUrl) {\n            util.warn('[cloudMonitor] not set baseUrl')\n        }\n        let _options = Object.assign(baseConfig, options)\n        vm.$options = _options\n        vm.queue = aliQueue.getInstance(_options.baseUrl)\n        // 初始化\n        vm.baseOptions = '' // 初始化上传参数\n        vm.referrerPage = '' // 上一个页面\n        vm.userId = '' // 用户唯一标识\n        vm.SOURCE_TYPE = config.ALI_TYPE\n        vm.optionsInit(_options)\n        setupReplace(aliMonitor)\n    }\n}","import { initMixin } from './aliInit'\nimport { initBaseOptions } from '../conmmon/initBaseOptions'\nimport { initSaveLog } from '../conmmon/initLog'\n\nlet aliMonitor = {}\n\naliMonitor.init = function(options) {\n    this._init(options)\n}\n\ninitMixin(aliMonitor)\ninitBaseOptions(aliMonitor)\ninitSaveLog(aliMonitor)\n\n\nexport default aliMonitor","import wxMonitor from './wx-mini/wx'\nimport aliMonitor from './ali/ali'\n\n/**\n * 监控导出\n */\nexport default {\n    wxMonitor,\n    aliMonitor\n}"],"names":["generateUUID","uuid","d","Date","getTime","replace","c","r","Math","random","floor","toString","getCwarn","t","console","warn","noop","e","call","n","encode","encodeURIComponent","replaceAll","str","find","RegExp","ext","arguments","length","o","Object","prototype","hasOwnProperty","dateFormat","date","fmt","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","test","$1","getFullYear","substr","k","__assign","assign","s","i","p","apply","Base","baseUrl","api","requestQueue","requestTimmer","undefined","synRequestNum","synNum","retryNum","log","push","onReady","delay","clear","logError","fun","setTimeout","clearTimeout","pop","handleLog","JSON","parse","stringify","_fetch","then","_","reduceSynNumFun","err","wxQueue","instance","data","Promise","resolve","wx","request","url","method","dataType","fail","res","complete","WX_TYPE","WxHookMethods","WX_PROJECT_VERSION","HTTP_SUCCESS","HTTP_ERROR","APP_CONFIG","PAGE_CPNFIG","handlers","appHandles","pageHandles","subscribeEvent","handler","handleType","type","callback","triggerHandlers","forEach","replaceOld","source","name","replacement","isForced","original","wrapped","throttle","fn","canRun","args","getPage","getCurrentPages","__route__","HandleWxAppEvents","onError","wxMonitor","vm","simpleUrl","errorMessage","String","logSave","HandleWxPageEvents","onLoad","toUrl","referrer","referrerPage","ELinstenerTypes","Touchmove","Tap","addReplaceHandler","replaceApp","App","originApp","appOptions","methods","config","originMethod","replacePage","Page","originPage","pageOptions","gestureTrigger","mitoProcessed","isNotAction","m","throttleGesturetrigger","linstenerTypes","keys","currentTarget","indexOf","replaceNetwork","hook","originRequest","defineProperty","writable","enumerable","configurable","value","startTime","_i","options$1","reqData","successHandler","statusCode","httpUrl","httpUploadType","responseText","httpStatus","queue","endTime","consumeData","loadTime","util","success","failHandler","actOptions","setupReplace","baseConfig","autoReportApi","autoReportPage","autoReportPagePerformance","initMixin","_init","options","app","_options","$options","getInstance","baseOptions","userId","SOURCE_TYPE","optionsInit","ALI_TYPE","ALI_PROJECT_VERSION","initBaseOptions","monitor","option","getSystemInfo","projectVersion","customerKey","os","system","deviceName","model","brand","browserVersion","version","my","platform","initSaveLog","useData","logData","uploadType","mobileTime","pushToQueue","init","route","HandleAliAppEvents","aliMonitor","aliQueue"],"mappings":"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"}