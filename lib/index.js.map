{"version":3,"file":"index.js","sources":["../src/util/index.js","../src/queue/base.js","../src/queue/wx.js","../src/config/wx.js","../src/conmmon/subscribe.js","../src/util/help.js","../src/wx-mini/util.js","../src/config/index.js","../src/wx-mini/handleWxEvents.js","../src/wx-mini/replace.js","../src/wx-mini/load.js","../src/wx-mini/wxInit.js","../src/config/ali.js","../src/config/web.js","../src/web/util.js","../src/conmmon/initBaseOptions.js","../src/conmmon/initLog.js","../src/react/index.js","../src/vue/help.js","../src/vue/index.js","../src/conmmon/initFun.js","../src/wx-mini/wx.js","../src/ali/util.js","../src/ali/HandleAliEvents.js","../src/ali/replace.js","../src/ali/load.js","../src/queue/ali.js","../src/ali/aliInit.js","../src/ali/ali.js","../src/web/HandleEvents.js","../src/web/replace.js","../src/web/load.js","../src/queue/web.js","../src/web/webInit.js","../src/web/web.js","../src/index.js"],"sourcesContent":["/**\n * 生成用户唯一标识码\n */\nfunction generateUUID() {\n    let uuid = '',\n        d = new Date().getTime()\n\n    uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        let r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16)\n    })\n\n    return uuid\n}\n\nfunction getCwarn() {\n    let t = \"object\" == typeof console ? console.warn : noop;\n    try {\n        let e = {\n            warn: t\n        };\n        e.warn.call(e)\n    } catch (n) {\n        return noop\n    }\n    return t\n}\n\n/**\n * encodeURIComponent 转换\n * @param {*} t \n * @param {*} e \n */\nfunction encode(t, e) {\n    try {\n        t = e ? encodeURIComponent(t).replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\") : encodeURIComponent(t)\n    } catch (n) { }\n    return t\n}\n\n/**\n * 字符串替换\n * @param {*} str \n * @param {*} find \n * @param {*} replace \n */\nfunction replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n}\n\n\n/**\n * @param {*} t \n */\nfunction ext(t) {\n    for (let e = 1, n = arguments.length; e < n; e++) {\n        let r = arguments[e];\n        for (let o in r) {\n            Object.prototype.hasOwnProperty.call(r, o) && (t[o] = r[o])\n        }\n    }\n    return t\n}\n\n/**\n * 日期格式化\n * @param {*} date \n * @param {*} fmt \n */\nfunction dateFormat(date, fmt) {\n    if (!date || !(date instanceof Date)) {\n        return \"\";\n    }\n    var o = {\n        \"M+\": date.getMonth() + 1, // 月份\n        \"d+\": date.getDate(), // 日\n        \"h+\": date.getHours(), // 小时\n        \"m+\": date.getMinutes(), // 分\n        \"s+\": date.getSeconds(), // 秒\n        \"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度\n        \"S\": date.getMilliseconds() // 毫秒\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\n/**\n * 合并\n */\nfunction __assign() {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\nlet warn = getCwarn\n\nexport default {\n    ext,\n    warn,\n    encode,\n    replaceAll,\n    generateUUID,\n    dateFormat,\n    __assign\n}","\n/**\n * 消息队列 Base\n */\nexport default class Base {\n    constructor(baseUrl) {\n        this.api = \"/api/save/log\"\n        this.baseUrl = baseUrl\n        this.requestQueue = [] // 队列\n        this.requestTimmer = undefined\n        this.synRequestNum = 4\n        this.synNum = 0\n        this.retryNum = 1 // 重试上报机制\n    }\n\n    /**\n     * 同步队列 （传入对象必须要有logType，logError）\n     * @param {*} log 队列日志\n     */\n    pushToQueue(log) {\n        {\n            // 简单先同步放入数组中\n            this.requestQueue.push(log)\n            return this.onReady(() => {\n                this.requestTimmer = this.delay(() => {\n                    this.clear()\n                }, this.requestQueue[0] && (!!this.requestQueue[0].logError && this.requestQueue[0].logError > 0) ? 3e3 : -1)\n            })\n        }\n    }\n\n    /**\n     * 宏任务（检测是否有唯一对应值）\n     * @param {*} fun\n     */\n    onReady(fun) {\n        if (typeof fun != 'function') {\n            return\n        }\n        // 检测是否有 openId 如果没有则延迟上报\n        if (fun) {\n            fun()\n        }\n    }\n\n    /**\n     * 执行队列\n     * @param {*} fun\n     * @param {*} e\n     */\n    delay(fun, e) {\n        if (!fun && typeof fun != 'function') return null\n        return e === -1 ? (fun(), null) : setTimeout(fun, e || 0)\n    }\n\n    /**\n     * 并发限制\n     * @return {?}\n     */\n    clear() {\n        var e\n        if (this.synNum > this.synRequestNum) {\n            return clearTimeout(this.requestTimmer), this.requestTimmer = setTimeout(() => {\n                this.clear()\n            }, 50)\n        }\n        for (clearTimeout(this.requestTimmer), this.requestTimmer = null; this.synNum < this.synRequestNum && (e = this.requestQueue.pop()); this.synNum++) {\n            this.handleLog(e)\n        }\n        // 执行完如果还有数据则继续执行（放到宏任务）\n        !!this.requestQueue.length && (this.requestTimmer = setTimeout(() => {\n            this.clear()\n        }, 50))\n\n    }\n\n    /**\n     * 清空队列\n     * @return {?}\n     */\n    clearAll() {\n        this.requestQueue = []\n        this.requestTimmer = null\n        this.synNum = 0\n    }\n\n    /**\n     * 并发数减一\n     * @return {?}\n     */\n    reduceSynNumFun() {\n        \n    }\n\n    /**\n     * 上报\n     * @param {*} e logType判断上传接口是哪种类型 pv：上报pv 逻辑 mv：上报mv逻辑 logError：0 代码重新上报次数0次，用int后续方便扩展\n     */\n    handleLog(e) {\n        // 深拷贝避免影响其他数据\n        let log = JSON.parse(JSON.stringify(e))\n        try {\n            this._fetch(log).then(_ => {\n                this.reduceSynNumFun()\n            })\n        } catch (err) {\n            this.reduceSynNumFun()\n        }\n    }\n\n    \n\n}","import Base from './base'\n\n/**\n * 适用于微信消息队列\n */\nexport default class wxQueue extends Base {\n    /**\n     * 单例\n     * @param {*} baseUrl\n     * @return {?}\n     */\n    static getInstance(baseUrl) {\n        if (!wxQueue.instance) {\n            wxQueue.instance = new wxQueue(baseUrl)\n        }\n        return wxQueue.instance\n    }\n\n    /**\n     * 并发数减一\n     * @return {?}\n     */\n    reduceSynNumFun() {\n        wxQueue.instance.synNum--\n        return this\n    }\n\n    _fetch(data = {}) {\n        return new Promise(resolve => {\n            wx.request({\n                url: `${this.baseUrl}${this.api}`,\n                data: data,\n                method: 'POST',\n                dataType: 'json',\n                fail: (res) => {},\n                complete: (res) => {\n                    resolve()\n                }\n            })\n        })\n    }\n}","export const WX_TYPE = 2\nexport const WxRouteEvents = ['switchTab', 'reLaunch', 'redirectTo', 'navigateTo', 'navigateBack', 'routeFail']\nexport const WxHookMethods = ['request']\nexport const WX_PROJECT_VERSION = '1.0.0' // 项目版本号\nexport const HTTP_SUCCESS = 1\nexport const HTTP_ERROR = 2\nexport const APP_CONFIG = ['onError']\nexport const PAGE_CPNFIG = ['onLoad']\nexport const ELinstenerTypes = {\n    Touchmove: 'touchmove',\n    Tap: 'tap'\n}","const handlers = {}\nconst appHandles = {}\nconst pageHandles = {}\n\n/**\n * @param {*} handler \n * @param {*} handleType \n */\nexport function subscribeEvent(handler, handleType = '') {\n    if (!handler) {\n        return\n    }\n    switch (handleType) {\n        case 'app':\n            appHandles[handler.type] = appHandles[handler.type] || []\n            appHandles[handler.type].push(handler.callback)\n            break\n        case 'page':\n            pageHandles[handler.type] = appHandles[handler.type] || []\n            pageHandles[handler.type].push(handler.callback)\n            break\n        default:\n            handlers[handler.type] = handlers[handler.type] || []\n            handlers[handler.type].push(handler.callback)\n    }\n\n}\n\n/**\n * @param {*} type \n * @param {*} data \n * @param {*} handleType\n */\nexport function triggerHandlers(type, data, handleType = '') {\n    switch (handleType) {\n        case 'app':\n            if (!type || !appHandles[type]) return\n            appHandles[type].forEach((callback) => {\n                callback(data)\n            })\n            break\n        case 'page':\n            if (!type || !pageHandles[type]) return\n            pageHandles[type].forEach((callback) => {\n                callback(data)\n            })\n            break\n        default:\n            if (!type || !handlers[type]) return\n            handlers[type].forEach((callback) => {\n                callback(data)\n            })\n    }\n}\n\n","\n/**\n * 重写对象上面的某个属性\n * @param {*} source 需要被重写的对象\n * @param {*} name 需要被重写对象的key\n * @param {*} replacement 以原有的函数作为参数，执行并重写原有函数\n * @param {*} isForced \n */\nexport function replaceOld(source, name, replacement, isForced = false) {\n    if (name in source || isForced) {\n        const original = source[name]\n        const wrapped = replacement(original)\n        if (typeof wrapped === 'function') {\n            source[name] = wrapped\n        }\n    }\n}\n\n// 函数节流\n/**\n *\n * ../param fn 需要节流的函数\n * ../param delay 节流的时间间隔\n * ../returns 返回一个包含节流功能的函数\n */\nexport const throttle = (fn, delay) => {\n    let canRun = true\n    return function (...args) {\n        if (!canRun) return\n        fn.apply(this, args)\n        canRun = false\n        setTimeout(() => {\n            canRun = true\n        }, delay)\n    }\n}\n\nexport const nativeToString = Object.prototype.toString\n\n/**\n * 校验类型\n * @param {*} type \n */\nexport function isType(type) {\n    return function (value) {\n        return nativeToString.call(value) === \"[object \" + type + \"]\";\n    };\n}\n\n\n\n// 校验枚举\nexport const variableTypeDetection = {\n    isNumber: isType('Number'),\n    isString: isType('String'),\n    isBoolean: isType('Boolean'),\n    isNull: isType('Null'),\n    isUndefined: isType('Undefined'),\n    isSymbol: isType('Symbol'),\n    isFunction: isType('Function'),\n    isObject: isType('Object'),\n    isArray: isType('Array'),\n    isProcess: isType('process'),\n    isWindow: isType('Window')\n};\n\n/**\n * 检查是否是空对象\n * ../param obj 待检测的对象\n */\nexport function isEmptyObject(obj) {\n    return variableTypeDetection.isObject(obj) && Object.keys(obj).length === 0\n}\n\nexport function isEmpty(wat) {\n    return (variableTypeDetection.isString(wat) && wat.trim() === '') || wat === undefined || wat === null\n}\n\n/**\n * Checks whether given value has a then function.\n * ../param wat A value to be checked.\n */\n// export function isThenable(wat: any): boolean {\n//   // tslint:disable:no-unsafe-any\n//   return Boolean(wat && wat.then && typeof wat.then === 'function')\n//   // tslint:enable:no-unsafe-any\n// }\n\nexport function isExistProperty(obj, key) {\n    return obj.hasOwnProperty(key)\n}\n\n/**\n * 添加事件监听器\n * @param {*} target \n * @param {*} eventName \n * @param {*} handler \n * @param {*} opitons \n */\nexport function on(target, eventName, handler, opitons = false) {\n    target.addEventListener(eventName, handler, opitons)\n}\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {../link isError}.\n *\n * ../param wat A value to be checked.\n * ../returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (nativeToString.call(wat)) {\n        case '[object Error]':\n            return true\n        case '[object Exception]':\n            return true\n        case '[object DOMException]':\n            return true\n        default:\n            return isInstanceOf(wat, Error)\n    }\n}\n\n/**\n* Checks whether given value's type is an instance of provided constructor.\n* {../link isInstanceOf}.\n*\n* ../param wat A value to be checked.\n* ../param base A constructor to be used in a check.\n* ../returns A boolean representing the result.\n*/\nexport function isInstanceOf(wat, base) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return wat instanceof base\n    } catch (_e) {\n        return false\n    }\n}\n\n\n/**\n * 获取时间\n */\nexport function getTimestamp() {\n    return new Date().getTime()\n}\n\n/**\n * @param {*} version \n */\nexport function getBigVersion(version) {\n    return Number(version.split('.')[0])\n}\n\n// 函数防抖\n/**\n *\n * ../param fn 需要防抖的函数\n * ../param delay 防抖的时间间隔\n * ../param isImmediate 是否需要立即执行，默认为false，第一次是不执行的\n * ../returns 返回一个包含防抖功能的函数\n */\nexport const debounce = (fn, delay, isImmediate = false) => {\n    let timer = null\n    return function (...args) {\n        if (isImmediate) {\n            fn.apply(this, args)\n            isImmediate = false\n            return\n        }\n        clearTimeout(timer)\n        timer = setTimeout(() => {\n            fn.apply(this, args)\n        }, delay)\n    }\n}","import { variableTypeDetection } from '../util/help'\n\n/**\n * \n * @param {*} delta \n */\nexport function getNavigateBackTargetUrl(delta) {\n    if (!variableTypeDetection.isFunction(getCurrentPages)) {\n        return '';\n    }\n    var pages = getCurrentPages();\n    if (!pages.length) {\n        return 'App';\n    }\n    delta = delta || 1;\n    var toPage = pages[pages.length - delta];\n    return setUrlQuery(toPage.route, toPage.options);\n}\n\n/**\n * url\n * @param {*} url \n * @param {*} query \n */\nexport function setUrlQuery(url, query) {\n    var queryArr = [];\n    Object.keys(query).forEach(function (k) {\n        queryArr.push(k + \"=\" + query[k]);\n    });\n    if (url.indexOf('?') !== -1) {\n        url = url + \"&\" + queryArr.join('&');\n    }\n    else {\n        url = url + \"?\" + queryArr.join('&');\n    }\n    return url;\n}\n\n/**\n * 获取当前url\n */\nexport function getPage() {\n    return getCurrentPages()[getCurrentPages().length - 1].__route__\n}\n\n","export const PAGE = 'page_pv'\nexport const JS_ERROR = 'js_error'\nexport const HTTP_LOG = 'http_log'\nexport const RESOURCE_LOAD = 'resource_load'\nexport const CUSTOM_LOG = 'custom'\n","import { getPage } from './util'\nimport * as commonConfig from '../config/index'\n\n\nconst HandleWxAppEvents = {\n    onError(e) {\n        try {\n            if (!this.wxMonitor) return\n            let vm = this.wxMonitor\n            let data = {\n                simpleUrl: getPage(),\n                errorMessage: String(e)\n            }\n            vm.logSave(commonConfig.JS_ERROR, data)\n        } catch (e) { }\n    }\n}\n\nconst HandleWxPageEvents = {\n    onLoad() {\n        try {\n            if (!this.wxMonitor) return\n            let vm = this.wxMonitor,\n                toUrl = getPage()\n            let data = {\n                simpleUrl: toUrl,\n                referrer: vm.referrerPage || \"\",\n            }\n            vm.logSave(commonConfig.PAGE, data)\n            vm.referrerPage = toUrl\n        } catch (e) { }\n    }\n}\n\nexport { HandleWxAppEvents, HandleWxPageEvents }","import * as config from '../config/wx'\nimport util from '../util/index'\nimport { subscribeEvent, triggerHandlers } from '../conmmon/subscribe'\nimport { replaceOld, throttle, getTimestamp } from '../util/help'\nimport { HandleWxAppEvents, HandleWxPageEvents } from './handleWxEvents'\nimport { ELinstenerTypes } from '../config/wx'\nimport { getNavigateBackTargetUrl, getPage } from './util'\nimport * as commonConfig from '../config/index'\n\n/**\n * 添加函数\n * @param {*} handler \n * @param {*} handleType\n */\nexport function addReplaceHandler(handler, handleType) {\n    subscribeEvent(handler, handleType)\n}\n\nexport function replaceApp(wxMonitor) {\n    if (!App) {\n        return\n    }\n    HandleWxAppEvents.wxMonitor = wxMonitor\n\n    const originApp = App\n    App = function (appOptions) {\n        let methods = config.APP_CONFIG\n        methods.forEach((method) => {\n            addReplaceHandler({\n                callback: (data) => HandleWxAppEvents[method.replace('AppOn', 'on')](data),\n                type: method\n            }, 'app')\n            replaceOld(\n                appOptions,\n                method.replace('AppOn', 'on'),\n                function (originMethod) {\n                    return function (...args) {\n                        triggerHandlers.apply(null, [method, ...args, 'app'])\n                        if (originMethod) {\n                            originMethod.apply(this, args)\n                        }\n                    }\n                },\n                true\n            )\n        })\n        return originApp(appOptions)\n    }\n}\n\n/**\n * page\n * @param {*} wxMonitor \n */\nexport function replacePage(wxMonitor) {\n    if (!Page) {\n        return\n    }\n    HandleWxPageEvents.wxMonitor = wxMonitor\n\n    const originPage = Page\n    Page = function (pageOptions) {\n        let methods = config.PAGE_CPNFIG\n        // pv uv 自动化\n        methods.forEach(method => {\n            addReplaceHandler({\n                callback: (data) => HandleWxPageEvents[method.replace('PageOn', 'on')](data),\n                type: method\n            }, 'page')\n            replaceOld(\n                pageOptions,\n                method.replace('PageOn', 'on'),\n                function (originMethod) {\n                    return function (...args) {\n                        triggerHandlers.apply(null, [method, ...args, 'page'])\n                        if (originMethod) {\n                            originMethod.apply(this, args)\n                        }\n                    }\n                },\n                true\n            )\n        })\n        /**\n         * 记录用户行为\n         * @param {*} e \n         */\n        function gestureTrigger(e) {\n            e.mitoProcessed = true // 给事件对象增加特殊的标记，避免被无限透传\n            console.log('测试点击封装')\n            console.log(e)\n        }\n        function isNotAction(method) {\n            // 如果是method中处理过的方法，则不是处理用户手势行为的方法\n            return methods.find((m) => m.replace('PageOn', 'on') === method)\n        }\n        const throttleGesturetrigger = throttle(gestureTrigger, 500)\n        const linstenerTypes = [ELinstenerTypes.Touchmove, ELinstenerTypes.Tap]\n        // 用户行为重写click\n        Object.keys(pageOptions).forEach((m) => {\n            if ('function' !== typeof pageOptions[m] || isNotAction(m)) {\n                return\n            }\n            replaceOld(\n                pageOptions,\n                m,\n                function (originMethod) {\n                    return function (...args) {\n                        const e = args[0]\n                        if (e && e.type && e.currentTarget && !e.mitoProcessed) {\n                            if (linstenerTypes.indexOf(e.type)) {\n                                throttleGesturetrigger(e)\n                            }\n                        }\n                        originMethod.apply(this, args)\n                    }\n                },\n                true\n            )\n        })\n        return originPage.call(this, pageOptions)\n    }\n\n}\n\n/**\n * 路由跳转行为\n * @param {*} wxMonitor \n */\nexport function replaceRoute(wxMonitor) {\n    const vm = wxMonitor\n    // 代理跳转\n    let WxRouteEvents = config.WxRouteEvents\n    WxRouteEvents.forEach(method => {\n        let originMethod = wx[method];\n        Object.defineProperty(wx, method, {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: function (options) {\n                var toUrl;\n                if (method === WxRouteEvents.NavigateBack) {\n                    toUrl = getNavigateBackTargetUrl(options.delta);\n                } else {\n                    toUrl = options.url;\n                }\n                try {\n                    let data = {\n                        simpleUrl: toUrl,\n                        referrer: vm.referrerPage || \"\",\n                    }\n                    // vm.logSave('', data)\n                    // vm.referrerPage = toUrl\n                } catch (e) {\n                    util.warn('[cloudMonitor] url error')\n                }\n                return originMethod.call(this, options);\n            }\n        })\n    })\n\n}\n\n/**\n * 代理请求\n * @param {*} wxMonitor \n */\nexport function replaceNetwork(wxMonitor) {\n    let vm = wxMonitor\n    let WxHookMethods = config.WxHookMethods\n    WxHookMethods.forEach(hook => {\n        let originRequest = wx[hook];\n        Object.defineProperty(wx, hook, {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: function () {\n                let args = [];\n                let startTime = getTimestamp()\n                for (let _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                let options$1 = args[0];\n                let url = options$1.url || \"\"\n\n                let reqData;\n                if (hook === 'request') {\n                    reqData = options$1.data;\n                }\n                let successHandler = function (res) {\n                    try {\n                        // 上报接口报警\n                        if (!!res && res.statusCode != 200) {\n                            let data = {\n                                simpleUrl: getPage(),\n                                httpUrl: options$1.url || \"\",\n                                httpUploadType: config.HTTP_ERROR,\n                                responseText: JSON.stringify(res),\n                                httpStatus: res.statusCode\n                            }\n                            if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                                vm.logSave(commonConfig.HTTP_LOG, data)\n                            }\n                        } else {\n                            let endTime = getTimestamp()\n                            let consumeData = {\n                                simpleUrl: getPage(),\n                                loadTime: endTime - startTime,\n                                httpUrl: options$1.url || \"\",\n                                httpUploadType: config.HTTP_SUCCESS,\n                                responseText: JSON.stringify(res),\n                                httpStatus: res.statusCode || 200\n                            }\n                            if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                                vm.logSave(commonConfig.HTTP_LOG, consumeData)\n                            }\n                        }\n                    } catch (e) {\n                        util.warn('[cloudMonitor] http error')\n                    }\n                    if (typeof options$1.success === 'function') {\n                        return options$1.success(res);\n                    }\n                };\n                let failHandler = function (err) {\n                    try {\n                        let data = {\n                            simpleUrl: getPage(),\n                            httpUrl: options$1.url || \"\",\n                            httpUploadType: config.HTTP_ERROR,\n                            responseText: JSON.stringify(err),\n                            httpStatus: '0'\n                        }\n                        if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                            vm.logSave(commonConfig.HTTP_LOG, data)\n                        }\n                    } catch (e) {\n                        util.warn('[cloudMonitor] http error')\n                    }\n                    if (typeof options$1.fail === 'function') {\n                        return options$1.fail(err);\n                    }\n                };\n                let actOptions = util.__assign(util.__assign({}, options$1), { success: successHandler, fail: failHandler });\n                return originRequest.call(this, actOptions);\n            }\n        })\n    })\n}\n\n","import { replaceApp, replaceNetwork, replacePage } from './replace'\n\n/**\n * 初始化\n * @param {*} wxMonitor \n */\nexport function setupReplace(wxMonitor) {\n    replacePage(wxMonitor)\n    replaceApp(wxMonitor)\n    replaceNetwork(wxMonitor)\n}","import util from '../util/index'\nimport wxQueue from '../queue/wx'\nimport * as config from '../config/wx'\nimport { setupReplace } from './load'\n\nconst baseConfig = {\n    baseUrl: '',\n    autoReportApi: true, // 是否上报api \n    autoReportPage: true, // 是否上报页面信息\n    autoReportPagePerformance: true, // 是否上报页面性能\n}\n\n/**\n * 初始化微信sdk\n * @param {*} wxMonitor \n */\nexport function initMixin(wxMonitor) {\n    /**\n     * 初始化\n     * @param {*} options \n     */\n    wxMonitor._init = function (options) {\n        const vm = this\n        if (!options || !options.app) {\n            util.warn('[cloudMonitor] not set app')\n        }\n        if (!options || !options.baseUrl) {\n            util.warn('[cloudMonitor] not set baseUrl')\n        }\n        let _options = Object.assign(baseConfig, options)\n        vm.$options = _options\n        vm.queue = wxQueue.getInstance(_options.baseUrl)\n        // 初始化\n        vm.baseOptions = '' // 初始化上传参数\n        vm.referrerPage = '' // 上一个页面\n        vm.userId = '' // 用户唯一标识\n        vm.SOURCE_TYPE = config.WX_TYPE\n        vm.optionsInit(_options)\n        setupReplace(wxMonitor)\n    }\n}","export const ALI_TYPE = 3\nexport const ALI_PROJECT_VERSION = '1.0.0' // 项目版本号\nexport const APP_CONFIG = ['onError']\nexport const PAGE_CPNFIG = ['onLoad']\nexport const AliHookMethods = ['request']\nexport const HTTP_SUCCESS = 1\nexport const HTTP_ERROR = 2\nexport const ELinstenerTypes = {\n    Touchmove: 'touchmove',\n    Tap: 'tap'\n}","export const WEB_TYPE = 1\nexport const WEB_PROJECT_VERSION = '1.0.0'\nexport const HISTORY = 'history'\nexport const HASHCHANGE = 'hashchange'\nexport const DOM = 'dom'\nexport const UNHANDLEDREJECTION = 'unhandledrejection'\nexport const XHR = 'xhr'\nexport const FETCH = 'fetch'\nexport const ERROR = 'error'\nexport const HTTP_SUCCESS = 1\nexport const HTTP_ERROR = 2\nexport const PERFORMANCE = 'performance'\nexport const REACT_ERROR = 'reactError'\nexport const VUE_ERROR = 'vueError'\n\n\n/**\n * 上报错误类型\n */\nexport const ERRORTYPES = {\n    UNKNOWN: 'UNKNOWN',\n    UNKNOWN_FUNCTION: 'UNKNOWN_FUNCTION',\n    JAVASCRIPT_ERROR: 'JAVASCRIPT_ERROR',\n    LOG_ERROR: 'LOG_ERROR',\n    FETCH_ERROR: 'HTTP_ERROR',\n    VUE_ERROR: 'VUE_ERROR',\n    REACT_ERROR: 'REACT_ERROR',\n    RESOURCE_ERROR: 'RESOURCE_ERROR',\n    PROMISE_ERROR: 'PROMISE_ERROR',\n    ROUTE_ERROR: 'ROUTE_ERROR'\n}","import { ERRORTYPES } from '../config/web'\nimport { variableTypeDetection } from '../util/help'\n\n\n/**\n * 获取web 设备信息\n */\nexport function getDevice() {\n  let device = {},\n    ua = navigator.userAgent\n  /** @type {(Array<string>|null)} */\n  let android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  /** @type {(Array<string>|null)} */\n  let showEffects = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  /** @type {(Array<string>|null)} */\n  let showPackageConstants = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  /** @type {(Array<string>|boolean|null)} */\n  let showConstants = !showEffects && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  /** @type {(Array<string>|null)} */\n  let cache_message = ua.match(/Android\\s[\\S\\s]+Build\\//);\n\n  if (android && (device.os = \"android\", device.osVersion = android[2], device.android = true, device.androidChrome = 0 <= ua.toLowerCase().indexOf(\"chrome\")), (showEffects || showConstants || showPackageConstants) && (device.os = \"ios\", device.ios = true), showConstants && !showPackageConstants && (device.osVersion = showConstants[2].replace(/_/g, \".\"), device.iphone = true), showEffects && (device.osVersion = showEffects[2].replace(/_/g, \".\"), device.ipad = true), showPackageConstants && (device.osVersion = showPackageConstants[3] ? showPackageConstants[3].replace(/_/g, \".\") : null, device.iphone = true), device.ios && device.osVersion && 0 <= ua.indexOf(\"Version/\") && \"10\" === device.osVersion.split(\".\")[0] && (device.osVersion = ua.toLowerCase().split(\"version/\")[1].split(\" \")[0]), device.iphone) {\n    /** @type {string} */\n    device.deviceName = \"iphone\";\n    var beginWidth = window.screen.width;\n    var upperHeight = window.screen.height;\n    if (320 === beginWidth && 480 === upperHeight) {\n      /** @type {string} */\n      device.deviceName = \"iphone 4\";\n    } else {\n      if (320 === beginWidth && 568 === upperHeight) {\n        /** @type {string} */\n        device.deviceName = \"iphone 5/SE\";\n      } else {\n        if (375 === beginWidth && 667 === upperHeight) {\n          /** @type {string} */\n          device.deviceName = \"iphone 6/7/8\";\n        } else {\n          if (414 === beginWidth && 736 === upperHeight) {\n            /** @type {string} */\n            device.deviceName = \"iphone 6/7/8 Plus\";\n          } else {\n            if (375 === beginWidth && 812 === upperHeight) {\n              /** @type {string} */\n              device.deviceName = \"iphone X/S/Max\";\n            }\n          }\n        }\n      }\n    }\n  } else {\n    if (device.ipad) {\n      /** @type {string} */\n      device.deviceName = \"ipad\";\n    } else {\n      if (cache_message) {\n        /** @type {string} */\n        var d = cache_message[0].split(\";\")[1].replace(/Build\\//g, \"\");\n        /** @type {string} */\n        device.deviceName = d.replace(/(^\\s*)|(\\s*$)/g, \"\");\n      }\n    }\n  }\n  if (-1 == ua.indexOf(\"Mobile\")) {\n    /** @type {string} */\n    let ua = navigator.userAgent.toLowerCase();\n    if (device.browserName = \"\\u672a\\u77e5\", 0 < ua.indexOf(\"msie\")) {\n      /** @type {string} */\n      var assignmentUrl = ua.match(/msie [\\d.]+;/gi)[0];\n      /** @type {string} */\n      device.browserName = assignmentUrl.split(\"/\")[0];\n      /** @type {string} */\n      device.browserVersion = assignmentUrl.split(\"/\")[1];\n    }\n    if (0 < ua.indexOf(\"firefox\")) {\n      /** @type {string} */\n      assignmentUrl = ua.match(/firefox\\/[\\d.]+/gi)[0];\n      /** @type {string} */\n      device.browserName = assignmentUrl.split(\"/\")[0];\n      /** @type {string} */\n      device.browserVersion = assignmentUrl.split(\"/\")[1];\n    }\n    if (0 < ua.indexOf(\"safari\") && ua.indexOf(\"chrome\") < 0) {\n      /** @type {string} */\n      assignmentUrl = ua.match(/safari\\/[\\d.]+/gi)[0];\n      /** @type {string} */\n      device.browserName = assignmentUrl.split(\"/\")[0];\n      /** @type {string} */\n      device.browserVersion = assignmentUrl.split(\"/\")[1];\n    }\n    if (0 < ua.indexOf(\"chrome\")) {\n      /** @type {string} */\n      assignmentUrl = ua.match(/chrome\\/[\\d.]+/gi)[0];\n      /** @type {string} */\n      device.browserName = assignmentUrl.split(\"/\")[0];\n      /** @type {string} */\n      device.browserVersion = assignmentUrl.split(\"/\")[1];\n    }\n  }\n\n  device.webView = (showConstants || showEffects || showPackageConstants) && ua.match(/.*AppleWebKit(?!.*Safari)/i)\n\n  return device;\n}\n\n/**\n * 获取当前页面地址\n */\nexport function getLocationHref() {\n  if (typeof document === 'undefined' || document.location == null) return ''\n  return document.location.href\n}\n\n/**\n * 解析error的stack，并返回args、column、line、func、url:\n * @param ex\n */\nexport function extractErrorStack(ex) {\n  const normal = {\n    name: ex.name,\n    message: ex.message\n  }\n  if (typeof ex.stack === 'undefined' || !ex.stack) {\n    return normal\n  }\n  const chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n    gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n    winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n    // Used to additionally parse URL/line/column from eval frames\n    geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,\n    chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,\n    lines = ex.stack.split('\\n'),\n    stack = []\n  let submatch, parts, element\n  // reference = /^(.*) is undefined$/.exec(ex.message)\n\n  for (let i = 0, j = lines.length; i < j; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0 // start of line\n      const isEval = parts[2] && parts[2].indexOf('eval') === 0 // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1] // url\n        parts[3] = submatch[2] // line\n        parts[4] = submatch[3] // column\n      }\n      element = {\n        url: !isNative ? parts[2] : null,\n        func: parts[1] || ERRORTYPES.UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null\n      }\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || ERRORTYPES.UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null\n      }\n    } else if ((parts = gecko.exec(lines[i]))) {\n      const isEval = parts[3] && parts[3].indexOf(' > eval') > -1\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/coluqqqqqqqqqqqqqqqqqqqqqqqqqqqqmn and use top-most line number\n        parts[3] = submatch[1]\n        parts[4] = submatch[2]\n        parts[5] = null // no column when eval\n      } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = ex.columnNumber + 1\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || ERRORTYPES.UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null\n      }\n    } else {\n      continue\n    }\n\n    if (!element.func && element.line) {\n      element.func = ERRORTYPES.UNKNOWN_FUNCTION\n    }\n\n    stack.push(element)\n  }\n  if (!stack.length) {\n    return null\n  }\n  return {\n    ...normal,\n    stack: stack\n  }\n\n  return normal\n}\n\nconst resourceMap = {\n  img: 'img',\n  script: 'script',\n  link: 'link'\n}\n\n/**\n * 资源错误信息合并\n * @param {*} target \n */\nexport function resourceTransform(target) {\n  return {\n    simpleUrl: getLocationHref(),\n    sourceUrl: '资源地址: ' + (target.src && target.src.slice(0, 100) || target.href && target.href.slice(0, 100)),\n    elementType: `${resourceMap[target.localName] || target.localName || \"\"}`\n  }\n}\n\n/**\n * 检测路由支持情况\n */\nexport function supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const chrome = (window).chrome\n  // tslint:disable-next-line:no-unsafe-any\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime\n  const hasHistoryApi = 'history' in window && !!window.history.pushState && !!window.history.replaceState\n\n  return !isChromePackagedApp && hasHistoryApi\n}\n\n/**\n * 返回包含id、class、innerTextde字符串的标签\n * @param target html节点\n */\nexport function htmlElementAsString(target) {\n  const tagName = target.tagName.toLowerCase()\n  if (tagName === 'body' || tagName === 'html') {\n    return null\n  }\n  let classNames = target.classList.value\n  classNames = classNames !== '' ? ` class=\"${classNames}\"` : ''\n  const id = target.id ? ` id=\"${target.id}\"` : ''\n  const innerText = target.innerText\n  return `<${tagName}${id}${classNames !== '' ? classNames : ''}>${innerText}</${tagName}>`\n}\n\n/**\n * @param {*} target \n */\nexport function unknownToString(target) {\n  if (variableTypeDetection.isString(target)) {\n    return target\n  }\n  return JSON.stringify(target)\n}\n\n/**\n * 将地址字符串转换成对象\n * @returns 返回一个对象\n */\nexport function parseUrlToObj(url) {\n  if (!url) {\n    return {}\n  }\n\n  const match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/)\n\n  if (!match) {\n    return {}\n  }\n\n  const query = match[6] || ''\n  const fragment = match[8] || ''\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment // everything minus origin\n  }\n}","import { WX_TYPE, WX_PROJECT_VERSION } from '../config/wx'\nimport { ALI_TYPE, ALI_PROJECT_VERSION } from '../config/ali'\nimport { WEB_TYPE, WEB_PROJECT_VERSION } from '../config/web'\nimport util from '../util/index'\nimport { getDevice } from '../web/util'\n\n/**\n * 初始化\n * @param {*} wxMonitor \n * @param {*} type \n */\nexport function initBaseOptions(monitor) {\n    monitor.optionsInit = function (option) {\n        let vm = this\n        let type = vm.SOURCE_TYPE\n        switch (type) {\n            case WX_TYPE:\n                // 初始化上传参数\n                wx.getSystemInfo({\n                    success: (res) => {\n                        vm.baseOptions = {\n                            app: option.app || \"\",\n                            type: WX_TYPE, // 代表微信小程序\n                            projectVersion: option.projectVersion || WX_PROJECT_VERSION, // 项目版本号\n                            customerKey: util.generateUUID(), // 会话id\n                            os: res.system.indexOf('iOS') === -1 ? 'Android' : 'IOS', // 系统信息\n                            deviceName: res.model, // 手机型号\n                            brand: res.brand, // 手机品牌\n                            browserVersion: res.version, // 小程序版本号\n                        }\n                    }\n                });\n                break\n            case ALI_TYPE:\n                // 初始化上传参数\n                my.getSystemInfo({\n                    success: (res) => {\n                        vm.baseOptions = {\n                            app: option.app || \"\",\n                            type: ALI_TYPE, // 代表微信小程序\n                            projectVersion: option.projectVersion || ALI_PROJECT_VERSION, // 项目版本号\n                            customerKey: util.generateUUID(), // 会话id\n                            os: res.platform === 'iOS' ? 'IOS' : 'Android', // 系统信息\n                            deviceName: res.model, // 手机型号\n                            brand: res.brand, // 手机品牌\n                            browserVersion: res.version, // 小程序版本号\n                        }\n                    }\n                });\n                break\n            case WEB_TYPE:\n                // 初始化web 参数\n                let configObj = getDevice()\n                vm.baseOptions = {\n                    app: option.app || \"\",\n                    type: WEB_TYPE, // 代表web\n                    projectVersion: option.projectVersion || WEB_PROJECT_VERSION, // 项目版本号\n                    customerKey: util.generateUUID(), // 会话id\n                    os: configObj.os === 'ios' ? 'IOS' : 'Android', // 系统信息\n                    deviceName: configObj.deviceName || \"\", // 手机型号\n                    brand: configObj.os + (configObj.osVersion ? \" \" + configObj.osVersion : \"\"), // 手机品牌\n                    browserVersion: configObj.osVersion, // 浏览器本号\n                }\n                break\n            default:\n                break\n        }\n    }\n\n\n}","import util from '../util/index'\nimport * as config from '../config/index'\n\n/**\n * 自定义上传log\n * @param {*} data \n */\nexport function log(data) {\n    let vm = this\n    let useData = Object.assign(data, vm.baseOptions)\n    useData.userId = vm.userId || \"\" // 用户标识\n    useData.uploadType = config.CUSTOM_LOG\n    useData.mobileTime = util.dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')\n    vm.queue.pushToQueue(data)\n}\n\n\nexport function initSaveLog(monitor) {\n    /**\n     * 上传日志\n     * @param {*} type \n     * @param {*} data \n     */\n    monitor.logSave = function (type, data) {\n        let useData,\n            logData = JSON.parse(JSON.stringify(data)),\n            vm = this\n        if (!vm.baseOptions) {\n            vm.optionsInit(vm.$options)\n            setTimeout(() => {\n                this.logSave(type, data)\n            }, 500)\n            return\n        }\n        switch (type) {\n            case config.PAGE:\n                useData = Object.assign(logData, vm.baseOptions)\n                useData.userId = vm.userId || \"\" // 用户标识\n                useData.uploadType = type\n                useData.mobileTime = util.dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')\n                vm.queue.pushToQueue(useData)\n                break\n            case config.JS_ERROR:\n                useData = Object.assign(logData, vm.baseOptions)\n                useData.userId = vm.userId || \"\" // 用户标识\n                useData.uploadType = type\n                useData.mobileTime = util.dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')\n                vm.queue.pushToQueue(useData)\n                break\n            case config.HTTP_LOG:\n                useData = Object.assign(logData, vm.baseOptions)\n                useData.userId = vm.userId || \"\" // 用户标识\n                useData.uploadType = type\n                useData.mobileTime = util.dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')\n                vm.queue.pushToQueue(useData)\n                break\n            case config.RESOURCE_LOAD:\n                useData = Object.assign(logData, vm.baseOptions)\n                useData.userId = vm.userId || \"\" // 用户标识\n                useData.uploadType = type\n                useData.mobileTime = util.dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')\n                vm.queue.pushToQueue(useData)\n                break\n            default:\n\n        }\n    }\n}","import { isError } from '../util/help'\nimport { extractErrorStack, getLocationHref } from '../web/util'\nimport * as webConfig from '../config/web'\nimport * as commonConfig from '../config/index'\n\n/**\n * 监听react 错误\n * @param {*} ex \n */\nexport function errorBoundaryReport(ex) {\n    if (!isError(ex)) {\n        console.warn('传入的react error不是一个object Error')\n        return\n    }\n    const result = extractErrorStack(ex)\n    result.type = webConfig.REACT_ERROR\n    let data = {\n        simpleUrl: getLocationHref(),\n        errorMessage: String(JSON.stringify(result))\n    }\n    vm.logSave(commonConfig.HTTP_LOG, data)\n}\n","import * as webConfig from '../config/web'\nimport * as commonConfig from '../config/index'\nimport { getLocationHref } from '../web/util'\nimport { variableTypeDetection, getBigVersion } from '../util/help'\n\n\n/**\n * vue 报错\n * @param {*} monitor \n * @param {*} err \n * @param {*} vm \n * @param {*} info \n * @param {*} Vue \n */\nexport function handleVueError(monitor, err, vm, info, Vue) {\n  const version = Vue?.version\n  let errorMessage = {\n    type: webConfig.VUE_ERROR,\n    message: `${err.message}(${info})`,\n    name: err.name,\n    stack: err.stack || [],\n  }\n  if (variableTypeDetection.isString(version)) {\n    console.log('getBigVersion', getBigVersion(version))\n    switch (getBigVersion(version)) {\n      case 2:\n        data = { ...errorMessage, ...vue2VmHandler(vm) }\n        break\n      case 3:\n        data = { ...errorMessage, ...vue3VmHandler(vm) }\n        break\n      default:\n        return\n        break\n    }\n  }\n  let param = {\n    simpleUrl: getLocationHref(),\n    errorMessage: String(errorMessage)\n  }\n  if (!monitor) return\n  monitor.logSave(commonConfig.JS_ERROR, param)\n}\n\n/**\n * vue 2\n * @param {*} vm \n */\nexport function vue2VmHandler(vm) {\n  let componentName = ''\n  if (vm.$root === vm) {\n    componentName = 'root'\n  } else {\n    const name = vm._isVue ? (vm.$options && vm.$options.name) || (vm.$options && vm.$options._componentTag) : vm.name\n    componentName =\n      (name ? 'component <' + name + '>' : 'anonymous component') +\n      (vm._isVue && vm.$options && vm.$options.__file ? ' at ' + (vm.$options && vm.$options.__file) : '')\n  }\n  return {\n    componentName,\n    propsData: vm.$options && vm.$options.propsData\n  }\n}\n\n/**\n * vue3\n * @param {*} vm \n */\nexport function vue3VmHandler(vm) {\n  let componentName = ''\n  if (vm.$root === vm) {\n    componentName = 'root'\n  } else {\n    console.log(vm.$options)\n    const name = vm.$options && vm.$options.name\n    componentName = name ? 'component <' + name + '>' : 'anonymous component'\n  }\n  return {\n    componentName,\n    propsData: vm.$props\n  }\n}","import { handleVueError } from './help'\n\n/**\n * vue 错误监听\n */\nexport const MitoVue = {\n    /**\n     * @param {*} Vue \n     */\n    install(Vue) {\n        if (!Vue || !Vue.config) return\n        let that = this\n        // vue 提供 warnHandler errorHandler报错信息\n        Vue.config.errorHandle = function (err, vm, info) {\n            handleVueError.apply(null, [that, err, vm, info, Vue])\n        }\n    }\n}\n","import { errorBoundaryReport } from '../react/index'\nimport { MitoVue } from '../vue/index'\nimport { log } from './initLog'\n\n\nexport function initFun(monitor) {\n    /**\n     * 设置用户唯一标识\n     * @param {*} userId \n     */\n    monitor.setUserId = function (userId) {\n        this.userId = userId\n    }\n\n    /**\n     * react 错误上报\n     */\n    monitor.errorBoundaryReport = errorBoundaryReport\n\n    /**\n     * vue 错误\n     */\n    monitor.MitoVue = MitoVue\n\n    /**\n     * 自定义上传log\n     */\n    monitor.log = log\n}","import { initMixin } from './wxInit'\nimport { initBaseOptions } from '../conmmon/initBaseOptions'\nimport { initSaveLog } from '../conmmon/initLog'\nimport { initFun } from '../conmmon/initFun'\n\nlet wxMonitor = {}\n\nwxMonitor.init = function(options) {\n    this._init(options)\n}\n\ninitMixin(wxMonitor)\ninitBaseOptions(wxMonitor)\ninitSaveLog(wxMonitor)\ninitFun(wxMonitor)\n\n\nexport default wxMonitor","/**\n * 获取当前url\n */\nexport function getPage() {\n    return getCurrentPages()[getCurrentPages().length - 1].route || \"\"\n}","import { getPage } from './util'\nimport * as commonConfig from '../config/index'\n\n\nconst HandleAliAppEvents = {\n    onError(e) {\n        try {\n            if (!this.aliMonitor) return\n            let vm = this.aliMonitor\n            let data = {\n                simpleUrl: getPage(),\n                errorMessage: String(e)\n            }\n            vm.logSave(commonConfig.JS_ERROR, data)\n        } catch (e) {\n        }\n    }\n}\n\nconst HandleAliPageEvents = {\n    onLoad() {\n        try {\n            if (!this.aliMonitor) return\n            let vm = this.aliMonitor,\n                toUrl = getPage()\n            let data = {\n                simpleUrl: toUrl,\n                referrer: vm.referrerPage || \"\",\n            }\n            vm.logSave(commonConfig.PAGE, data)\n            vm.referrerPage = toUrl\n        } catch (e) {\n\n        }\n    }\n}\n\nexport { HandleAliAppEvents, HandleAliPageEvents }","import * as config from '../config/ali'\nimport util from '../util/index'\nimport { subscribeEvent, triggerHandlers } from '../conmmon/subscribe'\nimport { ELinstenerTypes } from '../config/ali'\nimport { replaceOld, throttle, getTimestamp } from '../util/help'\nimport { HandleAliAppEvents, HandleAliPageEvents } from './HandleAliEvents'\nimport { getPage } from './util'\nimport * as commonConfig from '../config/index'\n\n/**\n * 添加函数\n * @param {*} handler \n * @param {*} handleType\n */\nexport function addReplaceHandler(handler, handleType) {\n    subscribeEvent(handler, handleType)\n}\n\n/**\n * page\n * @param {*} aliMonitor \n */\nexport function replacePage(aliMonitor) {\n    if (!Page) {\n        return\n    }\n    HandleAliPageEvents.aliMonitor = aliMonitor\n\n    const originPage = Page\n    Page = function (pageOptions) {\n        let methods = config.PAGE_CPNFIG\n        // pv uv 自动化\n        methods.forEach(method => {\n            addReplaceHandler({\n                callback: (data) => HandleAliPageEvents[method.replace('PageOn', 'on')](data),\n                type: method\n            }, 'page')\n            replaceOld(\n                pageOptions,\n                method.replace('PageOn', 'on'),\n                function (originMethod) {\n                    return function (...args) {\n                        triggerHandlers.apply(null, [method, ...args, 'page'])\n                        if (originMethod) {\n                            originMethod.apply(this, args)\n                        }\n                    }\n                },\n                true\n            )\n        })\n        /**\n         * 记录用户行为\n         * @param {*} e \n         */\n        function gestureTrigger(e) {\n            e.mitoProcessed = true // 给事件对象增加特殊的标记，避免被无限透传\n            console.log('测试点击封装')\n            console.log(e)\n        }\n        function isNotAction(method) {\n            // 如果是method中处理过的方法，则不是处理用户手势行为的方法\n            return methods.find((m) => m.replace('PageOn', 'on') === method)\n        }\n        const throttleGesturetrigger = throttle(gestureTrigger, 500)\n        const linstenerTypes = [ELinstenerTypes.Touchmove, ELinstenerTypes.Tap]\n        // 用户行为重写click\n        Object.keys(pageOptions).forEach((m) => {\n            if ('function' !== typeof pageOptions[m] || isNotAction(m)) {\n                return\n            }\n            replaceOld(\n                pageOptions,\n                m,\n                function (originMethod) {\n                    return function (...args) {\n                        const e = args[0]\n                        if (e && e.type && e.currentTarget && !e.mitoProcessed) {\n                            if (linstenerTypes.indexOf(e.type)) {\n                                throttleGesturetrigger(e)\n                            }\n                        }\n                        originMethod.apply(this, args)\n                    }\n                },\n                true\n            )\n        })\n        return originPage.call(this, pageOptions)\n    }\n}\n\n/**\n * app\n * @param {*} aliMonitor \n */\nexport function replaceApp(aliMonitor) {\n    if (!App) {\n        return\n    }\n    HandleAliAppEvents.aliMonitor = aliMonitor\n    const originApp = App\n    App = function (appOptions) {\n        let methods = config.APP_CONFIG\n        methods.forEach((method) => {\n            addReplaceHandler({\n                callback: (data) => HandleAliAppEvents[method.replace('AppOn', 'on')](data),\n                type: method\n            }, 'app')\n            replaceOld(\n                appOptions,\n                method.replace('AppOn', 'on'),\n                function (originMethod) {\n                    return function (...args) {\n                        triggerHandlers.apply(null, [method, ...args, 'app'])\n                        if (originMethod) {\n                            originMethod.apply(this, args)\n                        }\n                    }\n                },\n                true\n            )\n        })\n        return originApp(appOptions)\n    }\n\n}\n\n\n/**\n * request 封装\n * @param {*} aliMonitor \n */\nexport function replaceNetwork(aliMonitor) {\n    let vm = aliMonitor\n    let AliHookMethods = config.AliHookMethods\n    AliHookMethods.forEach(hook => {\n        let originRequest = my[hook];\n        Object.defineProperty(my, hook, {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: function () {\n                let args = [];\n                let startTime = getTimestamp()\n                for (let _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                let options$1 = args[0];\n                let url = options$1.url || \"\"\n\n                let reqData;\n                if (hook === 'request') {\n                    reqData = options$1.data;\n                }\n                let successHandler = function (res) {\n                    try {\n                        // 上报接口报警\n                        if (!!res && res.status != 200) {\n                            let data = {\n                                simpleUrl: getPage(),\n                                httpUrl: options$1.url || \"\",\n                                httpUploadType: config.HTTP_ERROR,\n                                responseText: JSON.stringify(res),\n                                httpStatus: res.status\n                            }\n                            if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                                vm.logSave(commonConfig.HTTP_LOG, data)\n                            }\n                        } else {\n                            let endTime = getTimestamp()\n                            let consumeData = {\n                                simpleUrl: getPage(),\n                                loadTime: endTime - startTime,\n                                httpUrl: options$1.url || \"\",\n                                httpUploadType: config.HTTP_SUCCESS,\n                                responseText: JSON.stringify(res),\n                                httpStatus: res.status || 200\n                            }\n                            if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                                vm.logSave(commonConfig.HTTP_LOG, consumeData)\n                            }\n                        }\n                    } catch (e) {\n                        util.warn('[cloudMonitor] http error')\n                    }\n                    if (typeof options$1.success === 'function') {\n                        return options$1.success(res);\n                    }\n                };\n                let failHandler = function (err) {\n                    try {\n                        let data = {\n                            simpleUrl: getPage(),\n                            httpUrl: options$1.url || \"\",\n                            httpUploadType: config.HTTP_ERROR,\n                            responseText: JSON.stringify(err),\n                            httpStatus: '0'\n                        }\n                        if (!!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n                            vm.logSave(commonConfig.HTTP_LOG, data)\n                        }\n                    } catch (e) {\n                        util.warn('[cloudMonitor] http error')\n                    }\n                    if (typeof options$1.fail === 'function') {\n                        return options$1.fail(err);\n                    }\n                };\n                let actOptions = util.__assign(util.__assign({}, options$1), { success: successHandler, fail: failHandler });\n                return originRequest.call(this, actOptions);\n            }\n        })\n    })\n\n}","import { replacePage, replaceApp, replaceNetwork } from './replace'\n\n/**\n * 初始化\n * @param {*} aliMonitor \n */\nexport function setupReplace(aliMonitor) {\n    replacePage(aliMonitor)\n    replaceApp(aliMonitor)\n    replaceNetwork(aliMonitor)\n}","import Base from './base'\n\n/**\n * 适用于支付宝消息队列\n */\nexport default class aliQueue extends Base {\n    /**\n     * 单例\n     * @param {*} baseUrl\n     * @return {?}\n     */\n    static getInstance(baseUrl) {\n        if (!aliQueue.instance) {\n            aliQueue.instance = new aliQueue(baseUrl)\n        }\n        return aliQueue.instance\n    }\n\n    /**\n     * 并发数减一\n     * @return {?}\n     */\n    reduceSynNumFun() {\n        aliQueue.instance.synNum--\n        return this\n    }\n\n    _fetch(data = {}) {\n        return new Promise(resolve => {\n            my.request({\n                url: `${this.baseUrl}${this.api}`,\n                data: data,\n                method: 'POST',\n                dataType: 'json',\n                fail: (res) => {},\n                complete: (res) => {\n                    resolve()\n                }\n            })\n        })\n    }\n}","import util from '../util/index'\nimport { setupReplace } from './load'\nimport aliQueue from '../queue/ali'\nimport * as config from '../config/ali'\n\nconst baseConfig = {\n    baseUrl: '',\n    autoReportApi: true, // 是否上报api \n    autoReportPage: true, // 是否上报页面信息\n    autoReportPagePerformance: true, // 是否上报页面性能\n}\n\n/**\n * 初始化支付宝sdk\n * @param {*} aliMonitor \n */\nexport function initMixin(aliMonitor) {\n    aliMonitor._init = function (options) {\n        const vm = this\n        if (!options || !options.app) {\n            util.warn('[cloudMonitor] not set app')\n        }\n        if (!options || !options.baseUrl) {\n            util.warn('[cloudMonitor] not set baseUrl')\n        }\n        let _options = Object.assign(baseConfig, options)\n        vm.$options = _options\n        vm.queue = aliQueue.getInstance(_options.baseUrl)\n        // 初始化\n        vm.baseOptions = '' // 初始化上传参数\n        vm.referrerPage = '' // 上一个页面\n        vm.userId = '' // 用户唯一标识\n        vm.SOURCE_TYPE = config.ALI_TYPE\n        vm.optionsInit(_options)\n        setupReplace(aliMonitor)\n    }\n}","import { initMixin } from './aliInit'\nimport { initBaseOptions } from '../conmmon/initBaseOptions'\nimport { initSaveLog } from '../conmmon/initLog'\nimport { initFun } from '../conmmon/initFun'\n\nlet aliMonitor = {}\n\naliMonitor.init = function(options) {\n    this._init(options)\n}\n\ninitMixin(aliMonitor)\ninitBaseOptions(aliMonitor)\ninitSaveLog(aliMonitor)\ninitFun(aliMonitor)\n\n\nexport default aliMonitor","import { isError } from '../util/help'\nimport { extractErrorStack, resourceTransform } from './util'\nimport { ERRORTYPES, HTTP_SUCCESS, HTTP_ERROR } from '../config/web'\nimport { getLocationHref, unknownToString, parseUrlToObj } from './util'\nimport * as commonConfig from '../config/index'\n\n\nconst HandleEvents = {\n  /**\n   * 处理xhr、fetch回调\n   * @param {*} data \n   */\n  handleHttp(data) {\n    if (!this.webMonitor) return\n    let vm = this.webMonitor\n    let param = ''\n    let url = data.url || \"\"\n    if (!!data && data.status != 200) {\n      param = {\n        simpleUrl: getLocationHref(),\n        httpUrl: data.url || \"\",\n        httpUploadType: HTTP_ERROR,\n        responseText: JSON.stringify(data.responseText || \"\"),\n        httpStatus: data.status || 0\n      }\n      if (!!param && !!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n        vm.logSave(commonConfig.HTTP_LOG, param)\n      }\n    }\n    if (!!data && data.status == 200) {\n      param = {\n        simpleUrl: getLocationHref(),\n        loadTime: data.elapsedTime || 0,\n        httpUrl: data.url || \"\",\n        httpUploadType: HTTP_SUCCESS,\n        responseText: JSON.stringify(data.responseText || \"\"),\n        httpStatus: data.status || 200\n      }\n    }\n    if (!!param && !!url && url != `${vm.queue.baseUrl}${vm.queue.api}`) {\n      vm.logSave(commonConfig.HTTP_LOG, param)\n    }\n  },\n\n  /**\n   * js 错误\n   * @param {*} errorEvent \n   */\n  handleError(errorEvent) {\n    if (!this.webMonitor) return\n    let vm = this.webMonitor\n    const target = errorEvent.target\n    // 资源错误上报\n    if (!!target.localName) {\n      let resourceData = resourceTransform(errorEvent.target)\n      vm.logSave(commonConfig.RESOURCE_LOAD, resourceData)\n      return\n    }\n    // code error\n    const { message, lineno, colno, error } = errorEvent\n    let result\n    if (error && isError(error)) {\n      result = extractErrorStack(error)\n    }\n    // 处理SyntaxError，stack没有lineno、colno\n    result || (result = HandleEvents.handleNotErrorInstance(message, lineno, colno))\n\n    let data = {\n      simpleUrl: getLocationHref(),\n      errorMessage: String(JSON.stringify(result))\n    }\n    vm.logSave(commonConfig.JS_ERROR, data)\n  },\n  /**\n   * 处理SyntaxError，stack没有lineno、colno\n   * @param {*} message \n   * @param {*} lineno \n   * @param {*} colno \n   */\n  handleNotErrorInstance(message, lineno, colno) {\n    let name = ERRORTYPES.UNKNOWN\n    let msg = message\n    const matches = message.match(ERROR_TYPE_RE)\n    if (matches[1]) {\n      name = matches[1]\n      msg = matches[2]\n    }\n    const element = {\n      func: ERRORTYPES.UNKNOWN_FUNCTION,\n      args: ERRORTYPES.UNKNOWN,\n      line: lineno,\n      col: colno\n    }\n    return {\n      name,\n      message: msg,\n      level: Severity.Normal,\n      time: getTimestamp(),\n      stack: [element]\n    }\n  },\n  /**\n   * history 模式下路由注册\n   * @param {*} data \n   */\n  handleHistory(data) {\n    this.savePv(data)\n  },\n  /**\n   * hash\n   * @param {*} data\n   */\n  handleHashchange(data) {\n    this.savePv(data)\n  },\n  /**\n   * 上报pv\n   * @param {*} data \n   */\n  savePv(data) {\n    try {\n      if (!this.webMonitor) return\n      let vm = this.webMonitor\n      let { from, to } = data\n      let { relative: parsedFrom } = parseUrlToObj(from)\n      let { relative: parsedTo } = parseUrlToObj(to)\n      let param = {\n        simpleUrl: parsedFrom ? parsedFrom : '/',\n        referrer: parsedTo ? parsedTo : '/'\n      }\n      vm.logSave(commonConfig.PAGE, param)\n    } catch (e) {\n\n    }\n  },\n  /**\n   * Promise\n   * @param {*} ev \n   */\n  handleUnhandleRejection(ev) {\n    console.log('测试')\n    console.log(ev)\n    if (!this.webMonitor) return\n    let data\n    let vm = this.webMonitor\n    data = {\n      type: ERRORTYPES.PROMISE_ERROR,\n      message: unknownToString(ev.reason),\n      url: getLocationHref(),\n      name: ev.type,\n    }\n    if (isError(ev.reason)) {\n      data = {\n        ...data,\n        ...extractErrorStack(ev.reason)\n      }\n    }\n    let result = {\n      simpleUrl: getLocationHref(),\n      errorMessage: String(JSON.stringify(data))\n    }\n    vm.logSave(commonConfig.JS_ERROR, result)\n  }\n\n}\n\nexport { HandleEvents }","import { HandleEvents } from './HandleEvents'\nimport { on, replaceOld, isExistProperty, throttle, variableTypeDetection, getTimestamp } from '../util/help'\nimport { subscribeEvent, triggerHandlers } from '../conmmon/subscribe'\nimport * as webConfig from '../config/web'\nimport { getLocationHref, supportsHistory, htmlElementAsString } from './util'\n\n/**\n * 添加方法\n * @param {*} handler \n */\nexport function addReplaceHandler(handler) {\n    subscribeEvent(handler)\n}\n\n/**\n * http 请求监控\n */\nexport function replaceNetwork() {\n    if (!('XMLHttpRequest' in window)) {\n        return\n    }\n    addReplaceHandler({\n        callback: (data) => {\n            HandleEvents.handleHttp(data)\n        },\n        type: webConfig.XHR\n    })\n    const originalXhrProto = XMLHttpRequest.prototype\n    replaceOld(\n        originalXhrProto,\n        'open',\n        (originalOpen) => {\n            return function (...args) {\n                this.mito_xhr = {\n                    method: variableTypeDetection.isString(args[0]) ? args[0].toUpperCase() : args[0],\n                    url: args[1] || \"\",\n                    type: webConfig.XHR,\n                    startTime: getTimestamp()\n                }\n                originalOpen.apply(this, args)\n            }\n        }\n    )\n    replaceOld(\n        originalXhrProto,\n        'send',\n        function (originalSend) {\n            return function (...args) {\n\n                on(this, 'loadend', function () {\n                    try {\n                        const { responseType, response, status } = this\n                        this.mito_xhr.reqData = args[0]\n                        const eTime = getTimestamp()\n                        this.mito_xhr.time = eTime\n                        this.mito_xhr.status = status\n                        if (['', 'json', 'text'].indexOf(responseType) !== -1) {\n                            this.mito_xhr.responseText = typeof response === 'object' ? JSON.stringify(response) : response\n                        }\n                        this.mito_xhr.elapsedTime = eTime - this.mito_xhr.startTime\n                        triggerHandlers(webConfig.XHR, this.mito_xhr)\n                    } catch (e) { }\n                })\n                originalSend.apply(this, args)\n            }\n        }\n    )\n\n}\n\n/**\n * 处理fetch请求\n */\nexport function replaceFetch() {\n    if (!('fetch' in window)) {\n        return\n    }\n    addReplaceHandler({\n        callback: (data) => {\n            HandleEvents.handleHttp(data)\n        },\n        type: webConfig.FETCH\n    })\n    replaceOld(window, webConfig.FETCH, (originalFetch) => {\n        return function (url, config) {\n            try {\n                const sTime = getTimestamp()\n                const method = (config && config.method) || 'GET'\n                let handlerData = {\n                    type: webConfig.FETCH,\n                    method,\n                    reqData: config && config.body,\n                    url\n                }\n                const headers = new Headers(config && config.headers || {})\n                Object.assign(headers, {\n                    setRequestHeader: headers.set\n                })\n                config = {\n                    ...config,\n                    headers\n                }\n                return originalFetch.apply(window, [url, config]).then(res => {\n                    const tempRes = res.clone()\n                    const eTime = getTimestamp()\n                    handlerData = {\n                        ...handlerData,\n                        elapsedTime: eTime - sTime,\n                        status: tempRes.status,\n                        // statusText: tempRes.statusText,\n                        time: eTime\n                    }\n                    tempRes.text().then((data) => {\n                        try {\n                            handlerData.responseText = (typeof data === 'string') ? JSON.parse(data) : \"\"\n                        } catch (e) {\n                            handlerData.responseText = \"\"\n                        }\n                        triggerHandlers(webConfig.FETCH, handlerData)\n                    })\n                    return res\n                }, err => {\n                    const eTime = getTimestamp()\n                    handlerData = {\n                        ...handlerData,\n                        elapsedTime: eTime - sTime,\n                        status: 0,\n                        // statusText: err.name + err.message,\n                        time: eTime\n                    }\n                    triggerHandlers(webConfig.FETCH, handlerData)\n                    throw err\n                })\n            } catch (e) {\n                return originalFetch.apply(window, [url, config]).then(res => {\n                    return res\n                }, err => {\n                    throw err\n                })\n            }\n        }\n    })\n}\n\n/**\n * 错误监控\n */\nexport function replaceError() {\n    // 先添加方法到数组\n    addReplaceHandler({\n        callback: (error) => {\n            HandleEvents.handleError(error)\n        },\n        type: webConfig.ERROR\n    })\n    on(\n        window,\n        webConfig.ERROR,\n        function (e) {\n            triggerHandlers(webConfig.ERROR, e)\n        },\n        true\n    )\n}\n\n// 上一次的路由\nlet lastHref\nlastHref = getLocationHref()\n\n// hashchange\nexport function listenHashchange() {\n    addReplaceHandler({\n        callback: (e) => {\n            HandleEvents.handleHashchange(e)\n        },\n        type: webConfig.HASHCHANGE\n    })\n    if (!isExistProperty(window, 'onpopstate')) {\n        on(window, webConfig.HASHCHANGE, function (e) {\n            triggerHandlers(webConfig.HASHCHANGE, e)\n        })\n    }\n}\n\n// history\nexport function historyReplace() {\n    // 先添加方法到数组\n    addReplaceHandler({\n        callback: (data) => {\n            HandleEvents.handleHistory(data)\n        },\n        type: webConfig.HISTORY\n    })\n    if (!supportsHistory()) return\n    const oldOnpopstate = window.onpopstate\n    window.onpopstate = function (...args) {\n        const to = getLocationHref()\n        const from = lastHref\n        triggerHandlers(webConfig.HISTORY, {\n            from,\n            to\n        })\n        oldOnpopstate && oldOnpopstate.apply(this, args)\n    }\n    function historyReplaceFn(originalHistoryFn) {\n        return function (...args) {\n            const url = args.length > 2 ? args[2] : undefined\n            if (url) {\n                const from = lastHref\n                const to = String(url)\n                lastHref = to\n                triggerHandlers(webConfig.HISTORY, {\n                    from,\n                    to\n                })\n            }\n            return originalHistoryFn.apply(this, args)\n        }\n    }\n    replaceOld(window.history, 'pushState', historyReplaceFn)\n    replaceOld(window.history, 'replaceState', historyReplaceFn)\n}\n\nconst clickThrottle = throttle(triggerHandlers, 600)\n\n// 页面点击\nexport function domReplace() {\n    if (!('document' in window)) return\n    addReplaceHandler({\n        callback: (data) => {\n            const htmlString = htmlElementAsString(data.data.srcElement)\n            if (htmlString) {\n\n            }\n        },\n        type: webConfig.DOM\n    })\n    on(\n        window.document,\n        'click',\n        function (e) {\n            clickThrottle(webConfig.DOM, {\n                category: 'click',\n                data: e\n            })\n        },\n        true\n    )\n    // 暂时不需要keypress的重写\n    // on(\n    //   window.document,\n    //   'keypress',\n    //   function (e) {\n    //     keypressThrottle('dom', {\n    //       category: 'keypress',\n    //       data: this\n    //     })\n    //   },\n    //   true\n    // )\n}\n\n// Promise\nexport function unhandledrejectionReplace() {\n    addReplaceHandler({\n        callback: (data) => {\n            HandleEvents.handleUnhandleRejection(data)\n        },\n        type: webConfig.UNHANDLEDREJECTION\n    })\n    on(window, webConfig.UNHANDLEDREJECTION, function (ev) {\n        // ev.preventDefault() 阻止默认行为后，控制台就不会再报红色错误\n        triggerHandlers(webConfig.UNHANDLEDREJECTION, ev)\n    })\n}\n\n/**\n * https://blog.csdn.net/lovenjoe/article/details/80260658\n * DNS查询耗时 ：domainLookupEnd - domainLookupStart\n * TCP链接耗时 ：connectEnd - connectStart\n * request请求耗时 ：responseEnd - responseStart\n * 解析dom树耗时 ： domComplete- domInteractive\n * 白屏时间 ：responseStart - navigationStart\n * domready时间 ：domContentLoadedEventEnd - navigationStart\n * onload时间 ：loadEventEnd - navigationStart\n * 相关资料\n * https://segmentfault.com/a/1190000004010453\n * https://github.com/fredshare/blog/issues/5\n * https://javascript.ruanyifeng.com/bom/performance.html#toc5\n */\nexport function performanceReplace() {\n    addReplaceHandler({\n        callback: (data) => {\n            HandleEvents.handleUnhandleRejection(data)\n        },\n        type: webConfig.PERFORMANCE\n    })\n    window.onload = () => {\n        let performance = window.performance\n        if (!performance) {\n            // 当前浏览器不支持\n            console.log('你的浏览器不支持 performance 接口');\n            return;\n        }\n        // let times = performance.timing.toJSON()\n        // 发送页面性能指标数据, 上报内容 => \n        // let perf = this._objectSpread({}, times, {\n        //     url: \"\".concat(window.location.host).concat(window.location.pathname)\n        // })\n        // 页面耗时\n        // console.log(perf)\n        // 资源耗时\n        // console.log(performance.getEntries())\n        // 浏览器内存情况 usedJSHeapSize表示所有被使用的js堆栈内存；totalJSHeapSize表示当前js堆栈内存总大小，这表示usedJSHeapSize不能大于totalJSHeapSize，如果大于，有可能出现了内存泄漏。\n        // console.log(performance.memory)\n    }\n\n}","\nimport { replaceNetwork, replaceError, listenHashchange, historyReplace, domReplace, unhandledrejectionReplace, replaceFetch, performanceReplace } from './replace'\nimport { HandleEvents } from './HandleEvents'\n\n\n/**\n * 针对web 载入\n * @param {*} webMonitor \n */\nexport function setupReplace(webMonitor) {\n    HandleEvents.webMonitor = webMonitor\n    // 处理http\n    replaceNetwork()\n    // 处理fetch 请求\n    replaceFetch()\n    // js 错误\n    replaceError()\n    // Promise 错误\n    unhandledrejectionReplace()\n    // pv uv\n    listenHashchange()\n    historyReplace()\n    // 页面点击\n    domReplace()\n    // performance 性能\n    performanceReplace()\n}\n","import Base from './base'\n\n/**\n * 适用于web消息队列\n */\nexport default class webQueue extends Base {\n    /**\n     * 单例\n     * @param {*} baseUrl\n     * @return {?}\n     */\n    static getInstance(baseUrl) {\n        if (!webQueue.instance) {\n            webQueue.instance = new webQueue(baseUrl)\n        }\n        return webQueue.instance\n    }\n\n    /**\n     * 并发数减一\n     * @return {?}\n     */\n    reduceSynNumFun() {\n        webQueue.instance.synNum--\n        return this\n    }\n\n    _fetch(data = {}) {\n        return new Promise(resolve => {\n            \n            try {\n                const xhr = new XMLHttpRequest()\n                function state_Change() {\n                    /**\n                     * 0    Uninitialized  初始化状态。XMLHttpRequest 对象已创建或已被 abort() 方法重置。\n                     * 1    Open           open() 方法已调用，但是 send() 方法未调用。请求还没有被发送。\n                     * 2    Sent           Send() 方法已调用，HTTP 请求已发送到 Web 服务器。未接收到响应。\n                     * 3    Receiving      所有响应头部都已经接收到。响应体开始接收但未完成。\n                     * 4    Loaded         HTTP 响应已经完全接收。\n                     */\n                    if (xhr.readyState === 4) {\n                        resolve()\n                    }\n                }\n                xhr.open('POST', `${this.baseUrl}${this.api}`)\n                xhr.onreadystatechange = state_Change;\n                xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8')\n                xhr.withCredentials = true\n                xhr.send(JSON.stringify(data))\n            } catch (e) {\n                resolve()\n            }\n        })\n    }\n}","import util from '../util/index'\nimport { setupReplace } from './load'\nimport webQueue from '../queue/web'\nimport * as config from '../config/web'\n\nconst baseConfig = {\n    baseUrl: '',\n    autoReportApi: true, // 是否上报api \n    autoReportPage: true, // 是否上报页面信息\n    autoReportPagePerformance: true, // 是否上报页面性能\n}\n\nexport function initMixin(webMonitor) {\n    webMonitor._init = function (options) {\n        const vm = this\n        if (!options || !options.app) {\n            util.warn('[cloudMonitor] not set app')\n        }\n        if (!options || !options.baseUrl) {\n            util.warn('[cloudMonitor] not set baseUrl')\n        }\n        let _options = Object.assign(baseConfig, options)\n        vm.$options = _options\n        vm.queue = webQueue.getInstance(_options.baseUrl)\n        // 初始化\n        vm.baseOptions = '' // 初始化上传参数\n        vm.referrerPage = '' // 上一个页面\n        vm.userId = '' // 用户唯一标识\n        vm.SOURCE_TYPE = config.WEB_TYPE\n        vm.optionsInit(_options)\n        setupReplace(webMonitor)\n    }\n}","import { initMixin } from './webInit'\nimport { initBaseOptions } from '../conmmon/initBaseOptions'\nimport { initSaveLog } from '../conmmon/initLog'\nimport { initFun } from '../conmmon/initFun'\n\nlet webMonitor = {}\n\nwebMonitor.init = function(options) {\n    this._init(options)\n}\n\ninitMixin(webMonitor)\ninitBaseOptions(webMonitor)\ninitSaveLog(webMonitor)\ninitFun(webMonitor)\n\n\nexport default webMonitor","import wx from './wx-mini/wx'\nimport ali from './ali/ali'\nimport web from './web/web'\n\n/**\n * 监控导出\n */\nexport const wxMonitor = wx\nexport const aliMonitor = ali\nexport const webMonitor = web"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ext","e","r","o","warn","console","noop","encode","encodeURIComponent","replace","replaceAll","str","find","RegExp","generateUUID","d","Date","getTime","c","Math","random","floor","toString","dateFormat","date","fmt","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","k","test","$1","getFullYear","substr","Base","baseUrl","api","requestQueue","requestTimmer","undefined","synRequestNum","synNum","retryNum","log","push","onReady","_this","delay","clear","logError","fun","setTimeout","clearTimeout","_this2","pop","handleLog","JSON","parse","stringify","_fetch","then","_","_this3","reduceSynNumFun","err","wxQueue","instance","data","Promise","resolve","wx","request","url","method","dataType","fail","res","complete","WxHookMethods","APP_CONFIG","PAGE_CPNFIG","ELinstenerTypes","handlers","appHandles","pageHandles","subscribeEvent","handler","handleType","type","callback","triggerHandlers","forEach","replaceOld","source","name","replacement","isForced","original","wrapped","throttle","fn","canRun","args","nativeToString","isType","value","variableTypeDetection","isNumber","isString","isBoolean","isNull","isUndefined","isSymbol","isFunction","isObject","isArray","isProcess","isWindow","on","target","eventName","opitons","addEventListener","isError","wat","base","_e","isInstanceOf","Error","getTimestamp","getBigVersion","version","Number","split","getPage","getCurrentPages","__route__","PAGE","HTTP_LOG","HandleWxAppEvents","onError","wxMonitor","vm","simpleUrl","errorMessage","String","logSave","HandleWxPageEvents","onLoad","toUrl","referrer","referrerPage","commonConfig","addReplaceHandler","replacePage","Page","originPage","pageOptions","methods","config","originMethod","throttleGesturetrigger","mitoProcessed","linstenerTypes","keys","m","currentTarget","indexOf","setupReplace","App","originApp","appOptions","replaceApp","hook","originRequest","defineProperty","writable","enumerable","configurable","startTime","_i","options$1","successHandler","statusCode","httpUrl","httpUploadType","responseText","httpStatus","queue","endTime","consumeData","loadTime","util","success","failHandler","actOptions","replaceNetwork","baseConfig","autoReportApi","autoReportPage","autoReportPagePerformance","AliHookMethods","ERRORTYPES","getLocationHref","document","location","href","extractErrorStack","ex","normal","message","stack","submatch","parts","element","chrome","gecko","winjs","geckoEval","chromeEval","lines","j","exec","isNative","func","line","column","columnNumber","resourceMap","img","script","link","parseUrlToObj","match","query","fragment","host","path","protocol","relative","initBaseOptions","monitor","optionsInit","option","SOURCE_TYPE","getSystemInfo","baseOptions","app","projectVersion","customerKey","os","system","deviceName","model","brand","browserVersion","my","platform","configObj","device","ua","navigator","userAgent","android","showEffects","showPackageConstants","showConstants","cache_message","osVersion","androidChrome","toLowerCase","ios","iphone","ipad","beginWidth","window","screen","width","upperHeight","height","browserName","assignmentUrl","webView","getDevice","useData","userId","uploadType","mobileTime","pushToQueue","initSaveLog","logData","$options","errorBoundaryReport","result","handleVueError","info","Vue","componentName","$root","_isVue","_componentTag","__file","propsData","vue2VmHandler","$props","vue3VmHandler","param","MitoVue","install","that","errorHandle","initFun","setUserId","route","init","options","_init","_options","getInstance","initMixin","HandleAliAppEvents","aliMonitor","HandleAliPageEvents","status","aliQueue","lastHref","HandleEvents","handleHttp","webMonitor","elapsedTime","handleError","errorEvent","localName","resourceData","sourceUrl","src","slice","elementType","resourceTransform","lineno","colno","error","handleNotErrorInstance","msg","matches","ERROR_TYPE_RE","col","level","Severity","Normal","time","handleHistory","savePv","handleHashchange","from","to","parsedFrom","parsedTo","handleUnhandleRejection","ev","reason","historyReplace","isChromePackagedApp","runtime","hasHistoryApi","history","pushState","replaceState","oldOnpopstate","onpopstate","historyReplaceFn","originalHistoryFn","clickThrottle","obj","key","originalXhrProto","XMLHttpRequest","originalOpen","mito_xhr","toUpperCase","originalSend","responseType","response","reqData","eTime","_typeof","originalFetch","sTime","handlerData","body","headers","Headers","setRequestHeader","set","tempRes","clone","text","tagName","classNames","classList","id","innerText","htmlElementAsString","srcElement","category","onload","performance","webQueue","xhr","open","onreadystatechange","readyState","withCredentials","send","ali","web"],"mappings":"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"}